{"version":3,"sources":["../src/ts/components/helpers.ts","../src/ts/components/box.ts","../src/ts/components/inline.ts","../src/ts/components/slider.ts","../src/ts/index.ts"," [synthetic:base] "," [synthetic:util/global] "," [synthetic:util/owns] "," [synthetic:util/defineproperty] "," [synthetic:util/polyfill] "," [synthetic:es6/object/assign] "," [synthetic:util/findinternal] "," [synthetic:es6/array/find] "],"names":["create","tagName","id","click","el","document","createElement","onclick","createClass","className","iterableToArray","iterable","list","i","length","push","applyStyles","styles","key","style","hide","originalDisplay","display","show","insertAfter","target","parentElement","insertBefore","nextSibling","toggleClass","on","classList","contains","toggle","libBind","$","videobox","$.videobox","video","VideoboxObj","open","vbClose","$.vbClose","close","fn","$.fn.videobox","options","linkMapper","elements","this","bind","libBind$1","vbInline","$.vbInline","VbInlineObj","vbiClose","$.vbiClose","callback","$.fn.vbInline","detach","forEach","querySelector","VbInline","parentNode","removeChild","libBind$2","vbSlider","$.vbSlider","VbSlider","getSlider","$.fn.vbSlider","bindAll","Videobox","$jscomp","scope","getGlobal","a","window","global","owns","b","Object","prototype","hasOwnProperty","call","defineProperty","defineProperties","c","get","set","TypeError","Array","value","polyfill","d","split","e","configurable","writable","arguments","g","findInternal","String","v","constructor","links","isOpen","animations","defaults","width","height","closeText","padding","root","body","animation","duration","iterations","delay","easing","overlay","wrap","center","appendChild","responsive","bottomContainer","allowFullscreen","frameBorder","bottom","button","innerHTML","caption","addEventListener","activeVideo","setPlayerSizePosition","querySelectorAll","link","vbListener","removeEventListener","vbiListener","evt","preventDefault","stopPropagation","assign","setup","origin","getAttribute","bw","getBoundingClientRect","bt","x","left","clientWidth","y","top","clientHeight","changeVideo","stop","setPlayerPosition","nw","ratio","paddingBottom","JSON","parse","pop","url","title","newVideo","innerText","parent","offsetParent","wbr","obr","offsetLeft","offsetTop","targetRatio","centerOrigin","maxWidth","centerTarget","originRatio","animate","centerAnimation","onfinish","centerAnimation.onfinish","animateBotton","play","bottomAnimation","maxHeight","bottomAnimation.onfinish","showVideo","setAttribute","anim","cancel","jQuery","jQuery.fn.videobox","Zepto","hidding","hidden","closeTimeout","maxW","v1","v1.onfinish","v2","class","wrapDest","animation.onfinish","responsiveDest","animation2","animation2.onfinish","timer","setTimeout","clearTimeout","queue","timeout","moving","visible","detachedElements","moveAll","singleDuration","doubleClickTimeout","outer","prev","showPrev","next","showNext","content","buttons","attached","basis","parseInt","setCount","sliders","sizeTarget","trim","move","opts","slider","find","updateSizes","queueMove","setBasis","getTarget","dir","oldHeight","num","count","shift","firstChild","oldElements","slice","animationProperties","w","positionOrigin","transform","positionDest","skip","offsetHeight","elm","unshift","current","ch","base","offsetWidth","Math","floor","setAttached","enumerable","children","isMoving","readyState","ready"],"mappings":"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","file":"videobox.min.js","sourcesContent":["/**\r\n * Interface for Videobox configuration\r\n */\r\nexport interface vbOptions {\r\n\r\n    /**\r\n     * default player width\r\n     */\r\n    width?: number,\r\n\r\n    /**\r\n     * default player height\r\n     */\r\n    height?: number,\r\n\r\n    /**\r\n     * text for the close button\r\n     */\r\n    closeText?: string,\r\n\r\n    /**\r\n     * player padding\r\n     */\r\n    padding?: number,\r\n\r\n    /**\r\n     * element the pop-up will be attached to \r\n     */\r\n    root?: HTMLElement,\r\n\r\n    /**\r\n     * adittional style for the player (doesn't apply to the pop-up player)\r\n     */\r\n    style?: string,\r\n\r\n    /**\r\n     * adittional class name(s) for the player (doesn't apply to the pop-up player)\r\n     */\r\n    class?: string,\r\n\r\n    /**\r\n     * time (in ms) while the close button remains visible when the inline player is shown\r\n     */\r\n    closeTimeout?: number,\r\n\r\n    /**\r\n     * animation properties (see <a href=\"https://w3c.github.io/web-animations/\">web animations specifications</a>)\r\n     */\r\n    animation?: KeyframeAnimationOptions\r\n}\r\n\r\n/**\r\n * Interface for the Videobox's video element\r\n */\r\nexport interface vbVideo {\r\n\r\n    /**\r\n     * player url\r\n     */\r\n    url: string,\r\n\r\n    /**\r\n     * optional title, is supplied it'll dispalyed under the player\r\n     */\r\n    title?: string,\r\n\r\n    /**\r\n     * origin for Videobox actions, such as player open animation\r\n     */\r\n    origin: vbOrigin,\r\n\r\n    /**\r\n     * configuration overrides\r\n     */\r\n    options: vbOptions\r\n}\r\n\r\n/**\r\n * Interface for video origin\r\n */\r\nexport interface vbOrigin {\r\n\r\n    /**\r\n     * X coordinate where the player will appear (relative to options.root)\r\n     */\r\n    x?: number,\r\n\r\n    /**\r\n     * Y coordinate where the player will appear (relative to options.root)\r\n     */\r\n    y?: number,\r\n\r\n    /**\r\n     * initial player width\r\n     */\r\n    width?: number,\r\n\r\n    /**\r\n     * initial player height\r\n     */\r\n    height?: number,\r\n\r\n    /**\r\n     * target element (the clicked element)\r\n     */\r\n    target: HTMLElement\r\n}\r\n\r\n/** @internal */\r\nexport function create(tagName: string, id?: string, click?: any): HTMLElement {\r\n    let el = document.createElement(tagName)\r\n    if (id)\r\n        el.id = id\r\n    if (click)\r\n        el.onclick = click\r\n    return el\r\n}\r\n\r\n/** @internal */\r\nexport function createClass(tagName: string, className?: string, click?: any): HTMLElement {\r\n    let el = document.createElement(tagName)\r\n    if (className)\r\n        el.className = className\r\n    if (click)\r\n        el.onclick = click\r\n    return el\r\n}\r\n\r\n/** @internal */\r\nexport function iterableToArray<T>(iterable: any): Array<T> {\r\n    let list = []\r\n    for (let i = 0; i < iterable.length; i++)\r\n        list.push(iterable[i])\r\n    return list\r\n}\r\n\r\n/** @internal */\r\nexport function applyStyles(el: HTMLElement, styles: { [key: string]: string }): void {\r\n    for (let key in styles)\r\n        if (key in el.style)\r\n            el.style[key] = styles[key]\r\n}\r\n\r\n/** @internal */\r\nexport function hide(el: HTMLElement) {\r\n    el['originalDisplay'] = (el.style.display && (el.style.display == 'none' ? '' : el.style.display)) || ''\r\n    el.style.display = 'none'\r\n}\r\n\r\n/** @internal */\r\nexport function show(el: HTMLElement) {\r\n    if ('originalDisplay' in el && el['originalDisplay'])\r\n        el.style.display = el['originalDisplay']\r\n    else\r\n        el.style.display = ''\r\n}\r\n\r\n/** @internal */\r\nexport function insertAfter(el: HTMLElement, target: HTMLElement) {\r\n    target.parentElement.insertBefore(el, target.nextSibling)\r\n}\r\n\r\n/** @internal */\r\nexport function toggleClass(el: HTMLElement, className: string, on: boolean) {\r\n    if (el.classList.contains(className) ? !on : on) el.classList.toggle(className)\r\n}","import { create, applyStyles, vbOptions, vbVideo, hide, show, iterableToArray, toggleClass } from './helpers'\r\nimport { VbInlineObj as VbInline } from './inline'\r\n\r\nexport class Videobox {\r\n\r\n    private closeText: HTMLSpanElement\r\n    private center: HTMLDivElement\r\n    private caption: HTMLElement\r\n    private wrap: HTMLDivElement\r\n    private responsive: HTMLDivElement\r\n    private overlay: HTMLDivElement\r\n    private bottomContainer: HTMLDivElement\r\n    private video: HTMLIFrameElement\r\n    private bottom: HTMLDivElement\r\n    private button: HTMLLinkElement\r\n\r\n    private activeVideo: vbVideo\r\n    private isOpen: boolean = false\r\n    private animations: Array<Animation> = []\r\n\r\n    private defaults: vbOptions = {\r\n        width: 720,\r\n        height: 405,\r\n        closeText: 'Close',\r\n        padding: 30,\r\n        root: document.body,\r\n        animation: {\r\n            duration: 500,\r\n            iterations: 1,\r\n            delay: 0,\r\n            easing: 'ease-in-out'\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    constructor(links?: Array<HTMLElement> | string, options: vbOptions = {}, linkMapper?: ((el: HTMLElement) => vbVideo)) {\r\n        this.overlay = <HTMLDivElement>create('div', 'vbOverlay', () => this.close())\r\n        //this.defaults.root.appendChild(this.overlay)\r\n\r\n        this.wrap = <HTMLDivElement>create('div', 'vbWrap')\r\n        //this.defaults.root.appendChild(this.wrap)\r\n\r\n        this.center = <HTMLDivElement>create('div', 'vbCenter')\r\n        this.wrap.appendChild(this.center)\r\n\r\n        this.responsive = <HTMLDivElement>create('div', 'vbResponsive')\r\n        this.center.appendChild(this.responsive)\r\n\r\n        this.bottomContainer = <HTMLDivElement>create('div', 'vbBottomContainer')\r\n        this.center.appendChild(this.bottomContainer)\r\n\r\n        this.video = <HTMLIFrameElement>create('iframe', 'vbVideo')\r\n        this.video.allowFullscreen = true\r\n        this.video.frameBorder = '0px'\r\n        hide(this.video)\r\n        this.responsive.appendChild(this.video)\r\n\r\n        this.bottom = <HTMLDivElement>create('div', 'vbBottom')\r\n        this.bottomContainer.appendChild(this.bottom)\r\n\r\n        this.button = <HTMLLinkElement>create('a', 'vbCloseLink', () => this.close())\r\n        this.button.innerHTML = '<span id=\"vbCloseText\">' + this.defaults.closeText + '</span><i class=\"vb-icon-close\"></i>'\r\n        this.bottom.appendChild(this.button)\r\n\r\n        this.caption = create('strong', 'vbCaption')\r\n        this.bottom.appendChild(this.caption)\r\n\r\n        this.closeText = <HTMLSpanElement>this.button.querySelector('#vbCloseText')\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (this.isOpen && this.activeVideo)\r\n                this.setPlayerSizePosition()\r\n        })\r\n\r\n        if (links)\r\n            this.bind(links, options, linkMapper || this.linkMapper)\r\n    }\r\n\r\n    /**\r\n     * Map pop-up player to links \r\n     * \r\n     * @param links array of elements or query selector to bind Videobox to\r\n     * @param options player configuration\r\n     * @param linkMapper function to get a Videobox video object from the clicked element\r\n     */\r\n    bind(\r\n        links: Array<HTMLElement> | string,\r\n        options: vbOptions = {},\r\n        linkMapper: ((el: HTMLElement) => vbVideo) = this.linkMapper\r\n    ): void {\r\n        if (typeof links == 'string')\r\n            links = iterableToArray<HTMLElement>(document.querySelectorAll(links))\r\n\r\n        links.forEach(link => {\r\n            if (link['vbListener']) link.removeEventListener('click', link['vbListener'])\r\n            if (link['vbiListener']) link.removeEventListener('click', link['vbiListener'])\r\n            link['vbListener'] = (evt) => {\r\n                evt.preventDefault()\r\n                evt.stopPropagation()\r\n                let video = linkMapper(link)\r\n                video.options = Object.assign({}, options, video.options)\r\n                this.open(video)\r\n                return false\r\n            }\r\n            link.addEventListener('click', link['vbListener'])\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Open Videobox pop-up player\r\n     * \r\n     * @param video video to show\r\n     */\r\n    open(video: vbVideo): void {\r\n        if ('VbInline' in window)\r\n            window['VbInline'].close()\r\n        this.close()\r\n\r\n        video.options = Object.assign({}, this.defaults, video.options)\r\n        if (!video.options.root) video.options.root = document.body\r\n        this.setup(video)\r\n\r\n        let link = video.origin.target\r\n        let target = <HTMLElement>link.querySelector(link.getAttribute(\"data-target\")) || link\r\n\r\n        let bw = this.wrap.getBoundingClientRect()\r\n        let bt = target.getBoundingClientRect()\r\n\r\n        toggleClass(target, 'vb_line_fix', true)\r\n        video.origin = Object.assign({}, {\r\n            x: bt.left - bw.left + target.clientWidth / 2,\r\n            y: bt.top - bw.top + target.clientHeight / 2,\r\n            width: target.clientWidth,\r\n            height: target.clientHeight\r\n        }, video.origin)\r\n        toggleClass(target, 'vb_line_fix', false)\r\n\r\n        this.changeVideo(video)\r\n    }\r\n\r\n    /**\r\n     * Close the open pop-up\r\n     */\r\n    close() {\r\n        this.stop()\r\n        new Array(this.wrap, this.bottomContainer, this.overlay).forEach(el => toggleClass(el, 'visible', false))\r\n        this.wrap.style.top = '0px'\r\n        this.wrap.style.left = '0px'\r\n        this.activeVideo = null\r\n        return false\r\n    }\r\n\r\n    /**\r\n     * Calculate and set player position & size\r\n     * \r\n     * @returns width to height ratio of the player (in percent)\r\n     */\r\n    setPlayerSizePosition(): number {\r\n        if (!this.activeVideo) return\r\n\r\n        this.setPlayerPosition(this.activeVideo.options.root)\r\n\r\n        let width: number = this.activeVideo.options.width\r\n        let height: number = this.activeVideo.options.height\r\n\r\n        if (width + 2 * this.activeVideo.options.padding > this.wrap.clientWidth) {\r\n            let nw = this.wrap.clientWidth - 2 * this.activeVideo.options.padding\r\n            height = (height * nw) / width\r\n            width = nw\r\n        }\r\n        if (height + 2 * this.activeVideo.options.padding > this.wrap.clientHeight)\r\n            height = this.wrap.clientHeight - 2 * this.activeVideo.options.padding\r\n\r\n        let ratio = (height * 100) / width\r\n        this.responsive.style.paddingBottom = ratio + '%'\r\n        return ratio\r\n    }\r\n\r\n    private linkMapper(el: HTMLElement): vbVideo {\r\n        let options = JSON.parse(el.getAttribute(\"data-videobox\")) || {}\r\n        if (options.root) {\r\n            let root = options.root\r\n            if (typeof root == 'string')\r\n                root = iterableToArray<HTMLElement>(document.querySelectorAll(root))\r\n\r\n            if (root.length > 0)\r\n                options.root = root[0]\r\n            else\r\n                options.pop('root')\r\n        }\r\n        return {\r\n            url: el.getAttribute(\"href\") || \"\",\r\n            title: el.getAttribute(\"title\") || \"\",\r\n            options: options,\r\n            origin: { target: el }\r\n        }\r\n    }\r\n\r\n    private setup(newVideo: vbVideo): void {\r\n        this.closeText.innerText = newVideo.options.closeText\r\n        newVideo.options.root.appendChild(this.overlay)\r\n        newVideo.options.root.appendChild(this.wrap)\r\n        this.setPlayerPosition(newVideo.options.root)\r\n    }\r\n\r\n    private setPlayerPosition(root: HTMLElement = this.activeVideo.options.root): void {\r\n        let parent = <HTMLElement>this.wrap.offsetParent\r\n        let wbr = this.wrap.getBoundingClientRect()\r\n        let obr = this.overlay.getBoundingClientRect()\r\n        let pos = {\r\n            top: this.wrap.offsetTop - parent.offsetTop,\r\n            left: this.wrap.offsetLeft - parent.offsetLeft\r\n        }\r\n        let diff = {\r\n            top: obr.top - wbr.top,\r\n            left: obr.left - wbr.left\r\n        }\r\n        this.wrap.style.top = (pos.top + diff.top) + 'px'\r\n        this.wrap.style.left = (pos.left + diff.left) + 'px'\r\n    }\r\n\r\n    private changeVideo(newVideo: vbVideo): void {\r\n        this.activeVideo = newVideo\r\n        this.caption.innerHTML = this.activeVideo.title\r\n\r\n        let targetRatio = this.setPlayerSizePosition()\r\n\r\n        this.isOpen = true\r\n\r\n        let centerOrigin = {\r\n            top: (this.activeVideo.origin.y - this.wrap.clientHeight / 2) + 'px',\r\n            left: (this.activeVideo.origin.x - this.wrap.clientWidth / 2) + 'px',\r\n            'maxWidth': this.activeVideo.origin.width + 'px'\r\n        }\r\n\r\n        let centerTarget = {\r\n            top: '0px',\r\n            left: '0px',\r\n            'maxWidth': this.activeVideo.options.width + 'px'\r\n        }\r\n\r\n        applyStyles(this.center, centerOrigin)\r\n        new Array(this.wrap, this.overlay).forEach(el => toggleClass(el, 'visible', true))\r\n        toggleClass(this.wrap, 'animating', true)\r\n\r\n        let originRatio = ((this.activeVideo.origin.height * 100) / this.activeVideo.origin.width) || targetRatio\r\n        if (originRatio != targetRatio)\r\n            this.animations.push(this.responsive.animate([\r\n                { 'paddingBottom': originRatio + '%' },\r\n                { 'paddingBottom': targetRatio + '%' }\r\n            ], this.activeVideo.options.animation))\r\n\r\n        let centerAnimation = this.center.animate([\r\n            centerOrigin,\r\n            centerTarget\r\n        ], this.activeVideo.options.animation)\r\n        centerAnimation.onfinish = () => this.animateBotton()\r\n        this.animations.push(centerAnimation)\r\n        applyStyles(this.center, centerTarget)\r\n        centerAnimation.play()\r\n    }\r\n\r\n    private animateBotton(): void {\r\n        let bottomAnimation = this.bottomContainer.animate([\r\n            { 'maxHeight': '0px' },\r\n            { 'maxHeight': '200px' }\r\n        ], this.activeVideo.options.animation)\r\n        toggleClass(this.bottomContainer, 'visible', true)\r\n        bottomAnimation.onfinish = () => this.showVideo()\r\n        this.animations.push(bottomAnimation)\r\n        bottomAnimation.play()\r\n    }\r\n\r\n    private showVideo(): void {\r\n        if (!this.isOpen || this.video.getAttribute('src')) return\r\n        show(this.video)\r\n        this.video.setAttribute('src', this.activeVideo.url)\r\n        toggleClass(this.wrap, 'animating', false)\r\n    }\r\n\r\n    private stop(): void {\r\n        this.animations.forEach(anim => anim.cancel())\r\n        this.animations = []\r\n        this.isOpen = false\r\n        this.video.setAttribute('src', '')\r\n        hide(this.video)\r\n        toggleClass(this.wrap, 'animating', false)\r\n    }\r\n}\r\n\r\nexport const VideoboxObj = new Videobox()\r\nwindow['Videobox'] = VideoboxObj\r\n\r\nexport declare interface JQueryStatic {\r\n    /**\r\n     * Open Videobox pop-up player\r\n     * \r\n     * @param video video to show\r\n     */\r\n    videobox: (video: vbVideo) => void\r\n\r\n    /**\r\n     * Close the open pop-up\r\n     */\r\n    vbClose: () => void\r\n}\r\n\r\nexport declare interface JQuery {\r\n    /**\r\n     * Map pop-up player to elements matched by the query\r\n     * \r\n     * @example \r\n     * ```javascript\r\n     * $('a[rel=videobox]').videobox() // Bind the pop-up effect to every <a rel=\"videobox\"> element\r\n     * ```\r\n     * \r\n     * @param options player configuration\r\n     * @param linkMapper function to get a Videobox video object from the clicked element\r\n     */\r\n    videobox: (options?: vbOptions, linkMapper?: ((el: HTMLElement) => vbVideo)) => void\r\n}\r\n\r\nif (typeof (jQuery) !== 'undefined') {\r\n    jQuery['videobox'] = function (video: vbVideo): void {\r\n        VideoboxObj.open(video)\r\n    }\r\n\r\n    jQuery['vbClose'] = function (): void {\r\n        VideoboxObj.close()\r\n    }\r\n\r\n    jQuery.fn.videobox = function (options: vbOptions = {}, linkMapper?: ((el: HTMLElement) => vbVideo)): void {\r\n        let elements = iterableToArray<HTMLElement>(this)\r\n        if (linkMapper)\r\n            VideoboxObj.bind(elements, options, linkMapper)\r\n        else\r\n            VideoboxObj.bind(elements, options)\r\n    }\r\n}\r\n\r\nfunction libBind($) {\r\n    $.videobox = function (video: vbVideo): void {\r\n        VideoboxObj.open(video)\r\n    }\r\n\r\n    $.vbClose = function (): void {\r\n        VideoboxObj.close()\r\n    }\r\n\r\n    $.fn.videobox = function (options: vbOptions = {}, linkMapper?: ((el: HTMLElement) => vbVideo)): void {\r\n        let elements = iterableToArray<HTMLElement>(this)\r\n        if (linkMapper)\r\n            VideoboxObj.bind(elements, options, linkMapper)\r\n        else\r\n            VideoboxObj.bind(elements, options)\r\n    }\r\n}\r\n\r\nif (typeof jQuery != 'undefined') libBind(jQuery)\r\nif (typeof Zepto != 'undefined') libBind(Zepto)","import { create, applyStyles, vbOptions, vbVideo, hide, show, iterableToArray, insertAfter, toggleClass } from './helpers'\r\nimport { VideoboxObj as Videobox } from './box'\r\n\r\nexport class VbInline {\r\n\r\n    private wrap: HTMLDivElement\r\n    private responsive: HTMLDivElement\r\n    private caption: HTMLElement\r\n    private button: HTMLDivElement\r\n    private video: HTMLIFrameElement\r\n\r\n    private activeVideo: vbVideo\r\n    private isOpen: boolean = false\r\n    private hidding: boolean = false\r\n    private animations: Array<Animation> = []\r\n    private hidden: Array<HTMLElement> = []\r\n    private timer: number\r\n\r\n    private defaults: vbOptions = {\r\n        width: 720,\r\n        height: 405,\r\n        closeText: 'Close',\r\n        padding: 30,\r\n        closeTimeout: 1000,\r\n        animation: {\r\n            duration: 500,\r\n            iterations: 1,\r\n            delay: 0,\r\n            easing: 'ease-in-out'\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    constructor(links?: Array<HTMLElement> | string, options: vbOptions = {}, linkMapper?: ((el: HTMLElement) => vbVideo)) {\r\n        this.wrap = <HTMLDivElement>create('div', 'vbiWrap')\r\n\r\n        this.responsive = <HTMLDivElement>create('div', 'vbiResponsive')\r\n        this.wrap.appendChild(this.responsive)\r\n\r\n        this.caption = document.createElement('span')\r\n        this.caption.className = 'vb_video_title'\r\n        this.wrap.appendChild(this.caption)\r\n\r\n        this.button = <HTMLDivElement>create('div', 'vbiClose', () => this.close())\r\n        this.button.innerHTML = '<i class=\"vb-icon-circle-close-invert\"></i>'\r\n        this.wrap.appendChild(this.button)\r\n\r\n        this.video = <HTMLIFrameElement>create('iframe', 'vbiVideo')\r\n        this.video.allowFullscreen = true\r\n        this.video.frameBorder = '0px'\r\n        hide(this.video)\r\n        this.responsive.appendChild(this.video)\r\n\r\n        if (links)\r\n            this.bind(links, options, linkMapper || this.linkMapper)\r\n\r\n    }\r\n\r\n    /**\r\n     * Map inline player to elements matched by the query \r\n     * \r\n     * @param links array of elements or query selector to bind inline player to\r\n     * @param options player configuration\r\n     * @param linkMapper function to get a Videobox video object from the clicked element\r\n     */\r\n    bind(\r\n        links: Array<HTMLElement> | string,\r\n        options: vbOptions = {},\r\n        linkMapper: ((el: HTMLElement) => vbVideo) = this.linkMapper\r\n    ): void {\r\n        if (typeof links == 'string')\r\n            links = iterableToArray<HTMLElement>(document.querySelectorAll(links))\r\n\r\n        links.forEach(link => {\r\n            if (link['vbListener']) link.removeEventListener('click', link['vbListener'])\r\n            if (link['vbiListener']) link.removeEventListener('click', link['vbiListener'])\r\n            link['vbiListener'] = (evt) => {\r\n                evt.preventDefault()\r\n                evt.stopPropagation()\r\n                let video = linkMapper(link)\r\n                video.options = Object.assign({}, options, video.options)\r\n                this.open(video)\r\n                return false\r\n            }\r\n            link.addEventListener('click', link['vbiListener'])\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Open an inline player\r\n     * \r\n     * @param video video to show\r\n     */\r\n    open(video: vbVideo): void {\r\n        if ('Videobox' in window)\r\n            window['Videobox'].close()\r\n\r\n        video.options = Object.assign({}, this.defaults, video.options)\r\n\r\n        let link = video.origin.target\r\n        let target = <HTMLElement>link.querySelector(link.getAttribute(\"data-target\")) || link\r\n\r\n        toggleClass(target, 'vb_line_fix', true)\r\n        video.origin = Object.assign({}, {\r\n            x: target.clientWidth / 2,\r\n            y: target.clientHeight / 2,\r\n            width: target.clientWidth,\r\n            height: target.clientHeight\r\n        }, video.origin)\r\n        toggleClass(target, 'vb_line_fix', false)\r\n\r\n        this.close(() => this.changeVideo(video))\r\n    }\r\n\r\n    /**\r\n     * Close the open inline player\r\n     * \r\n     * @param callback function to run when close animation is over\r\n     */\r\n    close(callback?: () => any) {\r\n        this.stop()\r\n\r\n        if (!this.hidding)\r\n            if (this.wrap.parentElement && this.activeVideo) {\r\n                this.hidding = true\r\n                let maxW = this.activeVideo.origin.width + 'px'\r\n                let v1 = this.wrap.animate([\r\n                    { 'maxWidth': (this.activeVideo.options.width + 2 * this.activeVideo.options.padding) + 'px' },\r\n                    { 'maxWidth': maxW }\r\n                ], this.activeVideo.options.animation)\r\n\r\n                v1.onfinish = () => this.hide(callback)\r\n                this.wrap.style.maxWidth = maxW\r\n                v1.play()\r\n\r\n                let padding = ((this.activeVideo.origin.height * 100) / this.activeVideo.origin.width) + '%'\r\n                let v2 = this.responsive.animate([\r\n                    { 'paddingBottom': ((this.activeVideo.options.height * 100) / this.activeVideo.options.width) + '%' },\r\n                    { 'paddingBottom': padding }\r\n                ], this.activeVideo.options.animation)\r\n                this.responsive.style.paddingBottom = padding\r\n                v2.play()\r\n            } else\r\n                this.hide(callback)\r\n\r\n        return false\r\n    }\r\n\r\n    private linkMapper(el: HTMLElement): vbVideo {\r\n        return {\r\n            url: el.getAttribute(\"href\") || \"\",\r\n            title: el.getAttribute(\"title\") || \"\",\r\n            options: JSON.parse(el.getAttribute(\"data-videobox\")) || {},\r\n            origin: { target: el }\r\n        }\r\n    }\r\n\r\n    private setup(): void {\r\n        insertAfter(this.wrap, this.activeVideo.origin.target)\r\n        hide(this.activeVideo.origin.target)\r\n        this.hidden.push(this.activeVideo.origin.target)\r\n    }\r\n\r\n    private changeVideo(newVideo: vbVideo): void {\r\n\r\n        this.activeVideo = newVideo\r\n\r\n        this.setup()\r\n\r\n        this.wrap.setAttribute('style', this.activeVideo.options.style)\r\n        this.wrap.setAttribute('class', this.activeVideo.options.class)\r\n        this.caption.innerHTML = this.activeVideo.title\r\n        toggleClass(this.button, 'visible', true)\r\n        this.isOpen = true\r\n\r\n        let wrapOrigin = {\r\n            'maxWidth': this.activeVideo.origin.width + 'px'\r\n        }\r\n        let wrapDest = {\r\n            'maxWidth': (this.activeVideo.options.width + 2 * this.activeVideo.options.padding) + 'px'\r\n        }\r\n        let animation = this.wrap.animate([wrapOrigin, wrapDest], this.activeVideo.options.animation)\r\n        applyStyles(this.wrap, wrapDest)\r\n        animation.onfinish = () => this.showVideo()\r\n        this.animations.push(animation)\r\n        animation.play()\r\n\r\n        let responsiveDest = {\r\n            'paddingBottom': ((this.activeVideo.options.height * 100) / this.activeVideo.options.width) + '%'\r\n        }\r\n        let responsiveOrigin = {\r\n            'paddingBottom': ((this.activeVideo.origin.height * 100) / this.activeVideo.origin.width) + '%'\r\n        }\r\n        let animation2 = this.responsive.animate([responsiveOrigin, responsiveDest], this.activeVideo.options.animation)\r\n        animation2.onfinish = () => {\r\n            this.timer = window.setTimeout(() => toggleClass(this.button, 'visible', false), newVideo.options.closeTimeout)\r\n        }\r\n        this.animations.push(animation2)\r\n        animation2.play()\r\n        applyStyles(this.responsive, responsiveDest)\r\n    }\r\n\r\n    private showVideo() {\r\n        if (!this.isOpen) return\r\n        show(this.video)\r\n        this.video.setAttribute('src', this.activeVideo.url)\r\n    }\r\n\r\n    private hide(callback?: () => any) {\r\n        if (this.wrap.parentElement)\r\n            this.wrap.parentNode.removeChild(this.wrap)\r\n\r\n        this.hidden.forEach(el => show(el))\r\n        this.hidden = []\r\n\r\n        this.hidding = false\r\n        this.activeVideo = null\r\n        if (typeof callback == \"function\")\r\n            callback()\r\n    }\r\n\r\n    private stop() {\r\n        this.animations.forEach(anim => anim.cancel())\r\n        this.animations = []\r\n        this.isOpen = false\r\n        this.video.setAttribute('src', '')\r\n        window.clearTimeout(this.timer)\r\n        hide(this.video)\r\n    }\r\n}\r\n\r\nexport const VbInlineObj = new VbInline()\r\nwindow['VbInline'] = VbInlineObj\r\n\r\nexport declare interface JQueryStatic {\r\n    /**\r\n     * Open an inline player\r\n     * \r\n     * @param video video to show\r\n     */\r\n    vbInline: (video: vbVideo) => void\r\n\r\n    /**\r\n     * Close the open inline player\r\n     * \r\n     * @param callback function to run when close animation is over\r\n     */\r\n    vbiClose: (callback?: () => any) => void\r\n}\r\n\r\nexport declare interface JQuery {\r\n    /**\r\n     * Map inline player to elements matched by the query\r\n     * \r\n     * @example \r\n     * ```javascript\r\n     * $('a[rel=vbinline]').vbInline() // Bind the inline effect to every <a rel=\"vbinline\"> element\r\n     * ```\r\n     * \r\n     * @param options player configuration\r\n     * @param linkMapper function to get a Videobox video object from the clicked element\r\n     */\r\n    vbInline: (options?: vbOptions, linkMapper?: ((el: HTMLElement) => vbVideo)) => void\r\n}\r\n\r\nfunction libBind($) {\r\n    $.vbInline = function (video: vbVideo): void {\r\n        VbInlineObj.open(video)\r\n    }\r\n\r\n    $.vbiClose = function (callback?: () => any): void {\r\n        VbInlineObj.close(callback)\r\n    }\r\n\r\n    $.fn.vbInline = function (options: vbOptions = {}, linkMapper?: ((el: HTMLElement) => vbVideo)): void {\r\n        let elements = iterableToArray<HTMLElement>(this)\r\n        if (linkMapper)\r\n            VbInlineObj.bind(elements, options, linkMapper)\r\n        else\r\n            VbInlineObj.bind(elements, options)\r\n    }\r\n}\r\n\r\nif (typeof jQuery != 'undefined') libBind(jQuery)\r\nif (typeof Zepto != 'undefined') libBind(Zepto)","import { createClass, applyStyles, vbOptions, vbVideo, hide, show, iterableToArray, insertAfter, toggleClass } from './helpers'\r\nimport { VbInlineObj as VbInline } from './inline'\r\n\r\nfunction detach(elements: Array<HTMLElement>): void {\r\n    elements.forEach(el => {\r\n        if ('querySelector' in el && el.querySelector('#vbiWrap')) VbInline.close()\r\n        el.parentNode.removeChild(el)\r\n    })\r\n}\r\n\r\n/**\r\n * Interface for Videobox slider configuration\r\n */\r\nexport interface vbSliderOptions {\r\n\r\n    /**\r\n     * if true, slider will scroll all visible elements\r\n     */\r\n    moveAll?: boolean,\r\n\r\n    /**\r\n     * target selector\r\n     */\r\n    target?: string,\r\n\r\n    /**\r\n     * transition duration for one element\r\n     */\r\n    singleDuration?: number,\r\n\r\n    /**\r\n     * clicks within the timeout are processed together\r\n     */\r\n    doubleClickTimeout?: number,\r\n\r\n    /**\r\n     * animation properties (see <a href=\"https://w3c.github.io/web-animations/\">web animations specifications</a>)\r\n     */\r\n    animation?: KeyframeAnimationOptions\r\n}\r\n\r\n/**\r\n * Videobox thumbnail slider\r\n */\r\nexport class VbSlider {\r\n\r\n    private static sliders: Array<VbSlider> = []\r\n\r\n    /**\r\n     * Map Videobox slider to elements matched by the query\r\n     * \r\n     * @param elements array of elements or query selector to bind Videobox slider to\r\n     * @param options slider configuration\r\n     * @returns array of sliders matching the corresponding elements\r\n     */\r\n    static bind(elements: Array<HTMLElement> | string, options: vbSliderOptions = {}): Array<VbSlider> {\r\n        if (typeof elements == 'string')\r\n            elements = iterableToArray<HTMLElement>(document.querySelectorAll(elements))\r\n\r\n        let sliders: Array<VbSlider> = []\r\n        elements.forEach(target => {\r\n            let sizeTarget = (target.getAttribute('data-target') || '').trim()\r\n            let move = (target.getAttribute('data-move') || 'single').trim()\r\n            let opts: vbSliderOptions = {}\r\n\r\n            if (sizeTarget)\r\n                opts.target = sizeTarget\r\n\r\n            if (move)\r\n                opts.moveAll = move == 'all'\r\n\r\n            sliders.push(this.getSlider(target, Object.assign({}, options, opts)))\r\n        })\r\n        return sliders\r\n    }\r\n\r\n    /**\r\n     * Create a new Videobox slider, or find an existing slider and update it's configuration\r\n     * \r\n     * @param target an element containing the slider items\r\n     * @param options slider configuration\r\n     * @returns slider containing the target element\r\n     */\r\n    static getSlider(target: HTMLElement, options: vbSliderOptions = {}): VbSlider {\r\n        let slider = this.sliders.find(slider => slider.target == target)\r\n        if (slider) {\r\n            slider.options = Object.assign(slider.options, options)\r\n            return slider\r\n        } else {\r\n            return new VbSlider(target, options)\r\n        }\r\n    }\r\n\r\n    static updateSizes() {\r\n        this.sliders.forEach(slider => slider.setCount())\r\n    }\r\n\r\n    private target: HTMLElement\r\n    private outer: HTMLDivElement\r\n    private wrap: HTMLDivElement\r\n    private content: HTMLDivElement\r\n    private prev: HTMLDivElement\r\n    private next: HTMLDivElement\r\n    private buttons: Array<HTMLElement>\r\n\r\n    private basis: number\r\n    private queue: Array<string> = []\r\n    private timeout: number = -1\r\n    private moving: boolean = false\r\n    private visible: number = -1\r\n    private detachedElements: Array<HTMLElement> = []\r\n\r\n    private options: vbSliderOptions = {\r\n        moveAll: false,\r\n        target: '',\r\n        singleDuration: 500,\r\n        doubleClickTimeout: 200,\r\n        animation: {\r\n            duration: 500,\r\n            iterations: 1,\r\n            delay: 0,\r\n            easing: 'ease-in-out'\r\n        },\r\n    }\r\n\r\n    /**\r\n     * Array of currently visible elements (includes both new and old elements when moving)\r\n     */\r\n    get attached(): Array<HTMLElement> {\r\n        return iterableToArray<HTMLElement>(this.target.children)\r\n    }\r\n\r\n    /**\r\n     * True when slider is moving\r\n     */\r\n    get isMoving(): boolean {\r\n        return this.moving\r\n    }\r\n\r\n    /**\r\n     * Scroll slider to the left\r\n     */\r\n    showPrev(): void {\r\n        this.queueMove('r')\r\n    }\r\n\r\n    /**\r\n     * Scroll slider to the right \r\n     */\r\n    showNext(): void {\r\n        this.queueMove('l')\r\n    }\r\n\r\n    /**\r\n     * Set base width\r\n     * \r\n     * @param basis new base width\r\n     */\r\n    setBasis(basis: number): void {\r\n        if (basis != this.basis) {\r\n            this.basis = basis\r\n            this.setCount()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the slider's target element\r\n     */\r\n    getTarget(): HTMLElement {\r\n        return this.target\r\n    }\r\n\r\n    private constructor(target: HTMLElement, options: vbSliderOptions = {}) {\r\n        this.outer = <HTMLDivElement>createClass('div', 'vb_slider_outer')\r\n\r\n        this.prev = <HTMLDivElement>createClass('div', 'vb_slider_prev', () => this.showPrev())\r\n        this.prev.innerHTML = '<i class=\"vb-icon-prev\"></i>'\r\n        this.outer.appendChild(this.prev)\r\n\r\n        this.wrap = <HTMLDivElement>createClass('div', 'vb_slider_wrap')\r\n        this.outer.appendChild(this.wrap)\r\n\r\n        this.next = <HTMLDivElement>createClass('div', 'vb_slider_next', () => this.showNext())\r\n        this.next.innerHTML = '<i class=\"vb-icon-next\"></i>'\r\n        this.outer.appendChild(this.next)\r\n\r\n        this.content = <HTMLDivElement>createClass('div', 'vb_slider_cont')\r\n        this.wrap.appendChild(this.content)\r\n\r\n        this.buttons = iterableToArray<HTMLElement>(this.outer.querySelectorAll('i'))\r\n\r\n        this.target = target\r\n        let elements = this.attached\r\n\r\n        insertAfter(this.outer, this.target)\r\n        this.content.appendChild(this.target)\r\n\r\n        this.basis = parseInt(target.getAttribute('data-width')) || elements[0].clientWidth\r\n\r\n        this.options = Object.assign(this.options, options)\r\n\r\n        toggleClass(this.content, 'vb-slider__move-all', this.options.moveAll)\r\n\r\n        this.setCount()\r\n    }\r\n\r\n    private queueMove(dir: string): void {\r\n        if (this.queue.length > 0 && this.queue[this.queue.length - 1] != dir)\r\n            this.queue.pop()\r\n        else\r\n            this.queue.push(dir)\r\n\r\n        if (this.timeout >= 0)\r\n\r\n            clearTimeout(this.timeout)\r\n        this.timeout = <any>setTimeout(() => {\r\n            this.timeout = -1\r\n            if (!this.moving && this.queue.length > 0)\r\n                this.move()\r\n        }, this.options.doubleClickTimeout)\r\n    }\r\n\r\n    private move(): void {\r\n        this.moving = true\r\n        let dir = this.queue.pop()\r\n\r\n        let oldHeight = this.target.clientHeight\r\n\r\n        let num = 1\r\n        while (this.queue.length > 0)\r\n            num += this.queue.pop() == dir ? 1 : -1\r\n        if (num == 0) {\r\n            this.moving = false\r\n            return\r\n        }\r\n        if (num < 0) {\r\n            dir = dir == 'l' ? 'r' : 'l'\r\n            num = 0 - num\r\n        }\r\n\r\n        let count = (this.options.moveAll ? this.visible : 1) * num\r\n        count = count % (this.visible + this.detachedElements.length)\r\n\r\n        if (dir == 'l')\r\n            for (let i = 0; i < count && this.detachedElements.length > 0; i++)\r\n                this.target.appendChild(this.detachedElements.shift())\r\n        else\r\n            for (let i = 0; i < count && this.detachedElements.length > 0; i++)\r\n                this.target.insertBefore(this.detachedElements.pop(), this.target.firstChild)\r\n\r\n        let attached = this.attached\r\n        let oldElements = dir == 'l' ? attached.slice(0, attached.length - this.visible) : attached.slice(this.visible)\r\n        detach(oldElements)\r\n\r\n        let height = this.target.clientHeight\r\n        let width = 100 * count / this.visible\r\n\r\n        if (dir == 'l')\r\n            for (let i = oldElements.length - 1; i >= 0; i--)\r\n                this.target.insertBefore(oldElements[i], this.target.firstChild)\r\n        else\r\n            for (let i = 0; i < oldElements.length; i++)\r\n                this.target.appendChild(oldElements[i])\r\n\r\n        let animationProperties = this.options.singleDuration ? Object.assign({}, this.options.animation, { duration: this.options.singleDuration * count }) : this.options.animation\r\n\r\n        let w = width + 100\r\n        w = 100 * width / w\r\n\r\n        let positionOrigin = {\r\n            'transform': 'translate(' + (dir == 'l' ? 0 : -w) + '%)'\r\n        }\r\n        let positionDest = {\r\n            'transform': 'translate(' + (dir == 'l' ? -w : 0) + '%)'\r\n        }\r\n        this.content.style.width = (width + 100) + '%'\r\n\r\n        let anim = this.content.animate([positionOrigin, positionDest], animationProperties)\r\n        anim.addEventListener('finish', () => {\r\n            this.content.style.width = '100%'\r\n            this.skip(dir)\r\n        })\r\n\r\n        anim = this.content.animate([\r\n            {\r\n                height: oldHeight + 'px'\r\n            }, {\r\n                height: height + 'px'\r\n            }\r\n        ], animationProperties)\r\n        this.content.style.height = height + 'px'\r\n\r\n        let top = 0\r\n        if (this.options.target)\r\n            top = (<HTMLElement>this.target.querySelector(this.options.target) || { offsetHeight: 0 }).offsetHeight / 2\r\n\r\n        this.buttons.forEach(el => el.style.top = top ? top + 'px' : '')\r\n    }\r\n\r\n    private skip(dir: string): void {\r\n        let attached = this.attached\r\n        if (dir == 'l') {\r\n            let el = attached.slice(0, attached.length - this.visible)\r\n            detach(el)\r\n            el.forEach(elm => this.detachedElements.push(elm))\r\n        } else if (dir == 'r') {\r\n            let el = attached.slice(this.visible)\r\n            detach(el)\r\n            el.forEach(elm => this.detachedElements.unshift(elm))\r\n        }\r\n\r\n        if (this.queue.length > 0 && this.timeout < 0)\r\n            this.move()\r\n        else\r\n            this.moving = false\r\n\r\n    }\r\n\r\n    private setCount(): void {\r\n        let current = this.visible\r\n        let width = this.target.clientWidth\r\n        let ch = this.attached\r\n        let base = this.basis + ch[0].offsetWidth - ch[0].clientWidth  \t// base width including any offset\r\n\r\n        // calculate number of displayed items\r\n        let visible = Math.floor(width / this.basis)\r\n        if (visible < 1) {\r\n            visible = 1\r\n        } else {\r\n            let w1 = 2 - base / (width / visible)\r\n            let w2 = base / (width / (visible + 1))\r\n            if (w2 < w1) visible++\r\n        }\r\n\r\n        // add or remove visible items if needed\r\n        if (visible != current) {\r\n            this.visible = visible\r\n            this.setAttached()\r\n        }\r\n\r\n        // set new size\r\n        this.content.style.height = this.target.clientHeight + 'px'\r\n\r\n        let top = 0\r\n        if (this.options.target)\r\n            top = (<HTMLElement>this.target.querySelector(this.options.target) || { offsetHeight: 0 }).offsetHeight / 2\r\n\r\n        this.buttons.forEach(el => el.style.top = top ? top + 'px' : '')\r\n    }\r\n\r\n    private setAttached(): void {\r\n        let attached = this.attached\r\n        if (attached.length < this.visible)\r\n            for (let i = attached.length; i < this.visible && this.detachedElements.length > 0; i++) {\r\n                this.target.appendChild(this.detachedElements.shift())\r\n            }\r\n        else if (attached.length > this.visible)\r\n            for (let i = attached.length - 1; i >= this.visible; i--) {\r\n                this.detachedElements.unshift(attached[i])\r\n                detach([attached[i]])\r\n            }\r\n\r\n    }\r\n\r\n}\r\n\r\nwindow.addEventListener('resize', () => VbSlider.updateSizes())\r\nwindow['VbSlider'] = VbSlider\r\n\r\nexport declare interface JQueryStatic {\r\n    /**\r\n     * Create a new Videobox slider, or find an existing slider and update it's configuration\r\n     * \r\n     * @param target an element containing the slider items\r\n     * @param options slider configuration\r\n     * @returns slider containing the target element\r\n     */\r\n    vbSlider: (target: HTMLElement | JQuery, options: vbSliderOptions) => VbSlider\r\n}\r\n\r\nexport declare interface JQuery {\r\n    /**\r\n     * Map Videobox slider to elements matched by the query\r\n     * \r\n     * @example \r\n     * ```javascript\r\n     * var sliders = $('ul.vb_slider').vbSlider() // Create a Videobox slider for every <ul class=\"vb_slider\"> element\r\n     * ```\r\n     * \r\n     * @param options slider configuration\r\n     * @returns array of sliders matching the corresponding elements\r\n     */\r\n    vbSlider: (options?: vbSliderOptions) => Array<VbSlider>\r\n}\r\n\r\nfunction libBind($) {\r\n    $.vbSlider = function (target: HTMLElement | JQuery, options: vbSliderOptions = {}): VbSlider {\r\n        if ('length' in target)\r\n            target = target[0]\r\n        return VbSlider.getSlider(<HTMLElement>target, options)\r\n    }\r\n\r\n    $.fn.vbSlider = function (options: vbSliderOptions = {}): Array<VbSlider> {\r\n        let elements = iterableToArray<HTMLElement>(this)\r\n        return VbSlider.bind(elements, options)\r\n    }\r\n}\r\n\r\nif (typeof jQuery != 'undefined') libBind(jQuery)\r\nif (typeof Zepto != 'undefined') libBind(Zepto)\r\n","import { VideoboxObj as Videobox } from './components/box'\r\nimport { VbInlineObj as VbInline } from './components/inline'\r\nimport { VbSlider } from './components/slider'\r\n\r\nfunction bindAll() {\r\n    Videobox.bind(\"a[rel^='videobox']\")\r\n    VbInline.bind(\"a[rel^='vbinline']\")\r\n    VbSlider.bind(\".vb_slider\")\r\n}\r\n\r\nif (document.readyState != 'loading')\r\n    bindAll()\r\nelse\r\n    document.addEventListener('readystatechange', function ready() {\r\n        if (document.readyState != 'loading') {\r\n            document.removeEventListener('readystatechange', ready)\r\n            bindAll()\r\n        }\r\n    })"]}