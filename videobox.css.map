{"version":3,"file":"videobox.css","sources":["videobox.scss","../../node_modules/bourbon/app/assets/stylesheets/_bourbon.scss","../../node_modules/bourbon/app/assets/stylesheets/settings/_prefixer.scss","../../node_modules/bourbon/app/assets/stylesheets/settings/_px-to-em.scss","../../node_modules/bourbon/app/assets/stylesheets/settings/_asset-pipeline.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_assign-inputs.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_contains.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_contains-falsy.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_is-length.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_is-light.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_is-number.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_is-size.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_px-to-em.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_px-to-rem.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_shade.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_strip-units.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_tint.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_transition-property-name.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_unpack.scss","../../node_modules/bourbon/app/assets/stylesheets/functions/_modular-scale.scss","../../node_modules/bourbon/app/assets/stylesheets/helpers/_convert-units.scss","../../node_modules/bourbon/app/assets/stylesheets/helpers/_directional-values.scss","../../node_modules/bourbon/app/assets/stylesheets/helpers/_font-source-declaration.scss","../../node_modules/bourbon/app/assets/stylesheets/helpers/_gradient-positions-parser.scss","../../node_modules/bourbon/app/assets/stylesheets/helpers/_linear-angle-parser.scss","../../node_modules/bourbon/app/assets/stylesheets/helpers/_linear-gradient-parser.scss","../../node_modules/bourbon/app/assets/stylesheets/helpers/_linear-positions-parser.scss","../../node_modules/bourbon/app/assets/stylesheets/helpers/_linear-side-corner-parser.scss","../../node_modules/bourbon/app/assets/stylesheets/helpers/_radial-arg-parser.scss","../../node_modules/bourbon/app/assets/stylesheets/helpers/_radial-positions-parser.scss","../../node_modules/bourbon/app/assets/stylesheets/helpers/_radial-gradient-parser.scss","../../node_modules/bourbon/app/assets/stylesheets/helpers/_render-gradients.scss","../../node_modules/bourbon/app/assets/stylesheets/helpers/_shape-size-stripper.scss","../../node_modules/bourbon/app/assets/stylesheets/helpers/_str-to-num.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_animation.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_appearance.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_backface-visibility.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_background.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_background-image.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_border-image.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_calc.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_columns.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_filter.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_flex-box.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_font-face.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_font-feature-settings.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_hidpi-media-query.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_hyphens.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_image-rendering.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_keyframes.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_linear-gradient.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_perspective.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_placeholder.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_radial-gradient.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_selection.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_text-decoration.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_transform.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_transition.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_user-select.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_border-color.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_border-radius.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_border-style.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_border-width.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_buttons.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_clearfix.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_ellipsis.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_font-stacks.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_hide-text.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_margin.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_padding.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_position.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_prefixer.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_retina-image.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_size.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_text-inputs.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_timing-functions.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_triangle.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_word-wrap.scss","../../node_modules/bourbon/app/assets/stylesheets/_bourbon-deprecated-upcoming.scss","_icons.scss","_helpers.scss","common/_thumbnail.scss","common/_single-video.scss","common/_gallery.scss","common/_pagination.scss","videobox/_overlay.scss","videobox/_wrap.scss","videobox/_center.scss","videobox/_responsive.scss","videobox/_video.scss","videobox/_bottom.scss","videobox/_close.scss","vbinline/_wrap.scss","vbinline/_responsive.scss","vbinline/_video.scss","vbinline/_close.scss","vbslider/_wrap.scss","vbslider/_content.scss","vbslider/_buttons.scss","video-js/_base.scss","video-js/_control-bar.scss","video-js/_poster.scss","video-js/_video.scss","video-js/_play-button.scss","video-js/_spinner.scss","video-js/controls/_play.scss","video-js/controls/_volume.scss","video-js/controls/_time.scss","video-js/controls/_progress.scss","video-js/controls/_fullscreen.scss"],"sourcesContent":["/*!\t\r\n *\t@author\t\tHitkoDev http://hitko.eu/videobox\r\n *\t@copyright\tCopyright (C) 2016 HitkoDev All Rights Reserved.\r\n *\t@license\thttp://www.gnu.org/licenses/gpl-3.0.html GNU/GPL\r\n *\r\n *\tThis program is free software: you can redistribute it and/or modify\r\n *\tit under the terms of the GNU General Public License as published by\r\n *\tthe Free Software Foundation, either version 3 of the License, or\r\n *\tany later version.\r\n *\r\n *\tThis program is distributed in the hope that it will be useful,\r\n *\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n *\tGNU General Public License for more details.\r\n *\r\n *\tYou should have received a copy of the GNU General Public License\r\n *\talong with this program. If not, see <http://www.gnu.org/licenses/>\r\n */\r\n\r\n@import \"bourbon\";\r\n\r\n$primary-color: #005723;\r\n$primary-light: #84d1a4;\r\n$overlay-opacity: 0.7;\r\n$transition-duration: 0.5s;\r\n$hover-duration: 0.2s;\r\n$base-font-size: 24px;\r\n\r\n@import \"icons\";\r\n@import \"helpers\";\r\n\r\n@import \"common/thumbnail\";\r\n@import \"common/single-video\";\r\n@import \"common/gallery\";\r\n@import \"common/pagination\";\r\n\r\n@import \"videobox/overlay\";\r\n@import \"videobox/wrap\";\r\n@import \"videobox/center\";\r\n@import \"videobox/responsive\";\r\n@import \"videobox/video\";\r\n@import \"videobox/bottom\";\r\n@import \"videobox/close\";\r\n\r\n@import \"vbinline/wrap\";\r\n@import \"vbinline/responsive\";\r\n@import \"vbinline/video\";\r\n@import \"vbinline/close\";\r\n\r\n@import \"vbslider/wrap\";\r\n@import \"vbslider/content\";\r\n@import \"vbslider/buttons\";\r\n\r\n@import \"video-js/base\";\r\n@import \"video-js/control-bar\";\r\n@import \"video-js/poster\";\r\n@import \"video-js/video\";\r\n@import \"video-js/play-button\";\r\n@import \"video-js/spinner\";\r\n\r\n@import \"video-js/controls/play\";\r\n@import \"video-js/controls/volume\";\r\n@import \"video-js/controls/time\";\r\n@import \"video-js/controls/progress\";\r\n@import \"video-js/controls/fullscreen\";","// Bourbon 4.2.7\n// http://bourbon.io\n// Copyright 2011-2015 thoughtbot, inc.\n// MIT License\n\n@import \"settings/prefixer\";\n@import \"settings/px-to-em\";\n@import \"settings/asset-pipeline\";\n\n@import \"functions/assign-inputs\";\n@import \"functions/contains\";\n@import \"functions/contains-falsy\";\n@import \"functions/is-length\";\n@import \"functions/is-light\";\n@import \"functions/is-number\";\n@import \"functions/is-size\";\n@import \"functions/px-to-em\";\n@import \"functions/px-to-rem\";\n@import \"functions/shade\";\n@import \"functions/strip-units\";\n@import \"functions/tint\";\n@import \"functions/transition-property-name\";\n@import \"functions/unpack\";\n@import \"functions/modular-scale\";\n\n@import \"helpers/convert-units\";\n@import \"helpers/directional-values\";\n@import \"helpers/font-source-declaration\";\n@import \"helpers/gradient-positions-parser\";\n@import \"helpers/linear-angle-parser\";\n@import \"helpers/linear-gradient-parser\";\n@import \"helpers/linear-positions-parser\";\n@import \"helpers/linear-side-corner-parser\";\n@import \"helpers/radial-arg-parser\";\n@import \"helpers/radial-positions-parser\";\n@import \"helpers/radial-gradient-parser\";\n@import \"helpers/render-gradients\";\n@import \"helpers/shape-size-stripper\";\n@import \"helpers/str-to-num\";\n\n@import \"css3/animation\";\n@import \"css3/appearance\";\n@import \"css3/backface-visibility\";\n@import \"css3/background\";\n@import \"css3/background-image\";\n@import \"css3/border-image\";\n@import \"css3/calc\";\n@import \"css3/columns\";\n@import \"css3/filter\";\n@import \"css3/flex-box\";\n@import \"css3/font-face\";\n@import \"css3/font-feature-settings\";\n@import \"css3/hidpi-media-query\";\n@import \"css3/hyphens\";\n@import \"css3/image-rendering\";\n@import \"css3/keyframes\";\n@import \"css3/linear-gradient\";\n@import \"css3/perspective\";\n@import \"css3/placeholder\";\n@import \"css3/radial-gradient\";\n@import \"css3/selection\";\n@import \"css3/text-decoration\";\n@import \"css3/transform\";\n@import \"css3/transition\";\n@import \"css3/user-select\";\n\n@import \"addons/border-color\";\n@import \"addons/border-radius\";\n@import \"addons/border-style\";\n@import \"addons/border-width\";\n@import \"addons/buttons\";\n@import \"addons/clearfix\";\n@import \"addons/ellipsis\";\n@import \"addons/font-stacks\";\n@import \"addons/hide-text\";\n@import \"addons/margin\";\n@import \"addons/padding\";\n@import \"addons/position\";\n@import \"addons/prefixer\";\n@import \"addons/retina-image\";\n@import \"addons/size\";\n@import \"addons/text-inputs\";\n@import \"addons/timing-functions\";\n@import \"addons/triangle\";\n@import \"addons/word-wrap\";\n\n@import \"bourbon-deprecated-upcoming\";\n","@charset \"UTF-8\";\n\n/// Global variables to enable or disable vendor prefixes\n\n$prefix-for-webkit:    true !default;\n$prefix-for-mozilla:   true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera:     true !default;\n$prefix-for-spec:      true !default;\n","$em-base: 16px !default;\n","@charset \"UTF-8\";\n\n/// A global setting to enable or disable the `$asset-pipeline` variable for all functions that accept it.\n///\n/// @type Bool\n\n$asset-pipeline: false !default;\n","@function assign-inputs($inputs, $pseudo: null) {\n  $list: ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}\n","@charset \"UTF-8\";\n\n/// Checks if a list contains a value(s).\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @param {List} $values\n///   A single value or list of values to check for.\n///\n/// @example scss - Usage\n///   contains($list, $value)\n///\n/// @return {Bool}\n\n@function contains($list, $values...) {\n  @each $value in $values {\n    @if type-of(index($list, $value)) != \"number\" {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n","@charset \"UTF-8\";\n\n/// Checks if a list does not contains a value.\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @return {Bool}\n\n@function contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS length.\n///\n/// @param {String} $value\n\n@function is-length($value) {\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\n       or index(auto inherit initial 0, $value)\n       or (type-of($value) == \"number\" and not(unitless($value))));\n}\n","@charset \"UTF-8\";\n\n/// Programatically determines whether a color is light or dark.\n///\n/// @link http://robots.thoughtbot.com/closer-look-color-lightness\n///\n/// @param {Color (Hex)} $color\n///\n/// @example scss - Usage\n///   is-light($color)\n///\n/// @return {Bool}\n\n@function is-light($hex-color) {\n  $-local-red: red(rgba($hex-color, 1));\n  $-local-green: green(rgba($hex-color, 1));\n  $-local-blue: blue(rgba($hex-color, 1));\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\n\n  @return $-local-lightness > 0.6;\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid number.\n///\n/// @param {Number} $value\n///\n/// @require {function} contains\n\n@function is-number($value) {\n  @return contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS size.\n///\n/// @param {String} $value\n///\n/// @require {function} contains\n/// @require {function} is-length\n\n@function is-size($value) {\n  @return is-length($value)\n          or contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\n}\n","// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n","// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n///\n/// @return {Color}\n\n@function shade($color, $percent) {\n  @return mix(#000, $color, $percent);\n}\n","@charset \"UTF-8\";\n\n/// Strips the unit from a number.\n///\n/// @param {Number (With Unit)} $value\n///\n/// @example scss - Usage\n///   $dimension: strip-units(10em);\n///\n/// @example css - CSS Output\n///   $dimension: 10;\n///\n/// @return {Number (Unitless)}\n\n@function strip-units($value) {\n  @return ($value / ($value * 0 + 1));\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n///\n/// @return {Color}\n\n@function tint($color, $percent) {\n  @return mix(#fff, $color, $percent);\n}\n","// Return vendor-prefixed property names if appropriate\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\n//************************************************************************//\n@function transition-property-names($props, $vendor: false) {\n  $new-props: ();\n\n  @each $prop in $props {\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\n  }\n\n  @return $new-props;\n}\n\n@function transition-property-name($prop, $vendor: false) {\n  // put other properties that need to be prefixed here aswell\n  @if $vendor and $prop == transform {\n    @return unquote('-'+$vendor+'-'+$prop);\n  }\n  @else {\n    @return $prop;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Converts shorthand to the 4-value syntax.\n///\n/// @param {List} $shorthand\n///\n/// @example scss - Usage\n///   .element {\n///     margin: unpack(1em 2em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin: 1em 2em 1em 2em;\n///   }\n\n@function unpack($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  } @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  } @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  } @else {\n    @return $shorthand;\n  }\n}\n","// Scaling Variables\n$golden:           1.618;\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n\n$modular-scale-ratio: $perfect-fourth !default;\n$modular-scale-base: em($em-base) !default;\n\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n","//************************************************************************//\n// Helper function for str-to-num fn.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _convert-units($number, $unit) {\n  $strings: \"px\", \"cm\", \"mm\", \"%\", \"ch\", \"pica\", \"in\", \"em\", \"rem\", \"pt\", \"pc\", \"ex\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"deg\", \"rad\", \"grad\", \"turn\";\n  $units:   1px, 1cm, 1mm, 1%, 1ch, 1pica, 1in, 1em, 1rem, 1pt, 1pc, 1ex, 1vw, 1vh, 1vmin, 1vmax, 1deg, 1rad, 1grad, 1turn;\n  $index: index($strings, $unit);\n\n  @if not $index {\n    @warn \"Unknown unit `#{$unit}`.\";\n    @return false;\n  }\n\n  @if type-of($number) != \"number\" {\n    @warn \"`#{$number} is not a number`\";\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n","@charset \"UTF-8\";\n\n/// Directional-property mixins are shorthands for writing properties like the following\n///\n/// @ignore You can also use `false` instead of `null`.\n///\n/// @param {List} $vals\n///   List of directional values\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dotted null);\n///     @include margin(null 0 10px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: dotted;\n///     border-top-style: dotted;\n///     margin-bottom: 10px;\n///     margin-left: 0;\n///     margin-right: 0;\n///   }\n///\n/// @require {function} contains-falsy\n///\n/// @return {List}\n\n@function collapse-directionals($vals) {\n  $output: null;\n\n  $a: nth($vals, 1);\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\n\n  @if $a == 0 { $a: 0; }\n  @if $b == 0 { $b: 0; }\n  @if $c == 0 { $c: 0; }\n  @if $d == 0 { $d: 0; }\n\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\n  @else if $b == $d                      { $output: $a $b $c;    }\n  @else                                  { $output: $a $b $c $d; }\n\n  @return $output;\n}\n\n/// Output directional properties, for instance `margin`.\n///\n/// @access private\n///\n/// @param {String} $pre\n///   Prefix to use\n/// @param {String} $suf\n///   Suffix to use\n/// @param {List} $vals\n///   List of values\n///\n/// @require {function} collapse-directionals\n/// @require {function} contains-falsy\n\n@mixin directional-property($pre, $suf, $vals) {\n  // Property Names\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\n\n  $vals: collapse-directionals($vals);\n\n  @if contains-falsy($vals) {\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\n\n    @if length($vals) == 1 {\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\n    } @else {\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\n    }\n\n    @if length($vals) == 2 {\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 3 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 4 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\n    }\n  } @else {\n    #{$all}: $vals;\n  }\n}\n","// Used for creating the source string for fonts using @font-face\n// Reference: http://goo.gl/Ru1bKP\n\n@function font-url-prefixer($asset-pipeline) {\n  @if $asset-pipeline == true {\n    @return font-url;\n  } @else {\n    @return url;\n  }\n}\n\n@function font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats,\n  $font-url) {\n\n  $src: ();\n\n  $formats-map: (\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\n  );\n\n  @each $key, $values in $formats-map {\n    @if contains($file-formats, $key) {\n      $file-path: nth($values, 1);\n      $font-format: nth($values, 2);\n\n      @if $asset-pipeline == true {\n        $src: append($src, font-url($file-path) $font-format, comma);\n      } @else {\n        $src: append($src, url($file-path) $font-format, comma);\n      }\n    }\n  }\n\n  @return $src;\n}\n","@function _gradient-positions-parser($gradient-type, $gradient-positions) {\n  @if $gradient-positions\n  and ($gradient-type == linear)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _linear-positions-parser($gradient-positions);\n  }\n  @else if $gradient-positions\n  and ($gradient-type == radial)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _radial-positions-parser($gradient-positions);\n  }\n  @return $gradient-positions;\n}\n","// Private function for linear-gradient-parser\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\n  $offset: null;\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\n\n  @if ($unit-long == \"grad\") or\n      ($unit-long == \"turn\") {\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\n  }\n\n  @else if ($unit-short == \"deg\") or\n           ($unit-short == \"rad\") {\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\n  }\n\n  @if $offset {\n    $num: _str-to-num($first-val);\n\n    @return (\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\n      spec-image: $image\n    );\n  }\n}\n","@function _linear-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $has-multiple-vals: str-index($first-val, \" \");\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\n  $has-angle: is-number(str-slice($first-val, 1, 1));\n\n  @if $has-multiple-vals {\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\n  }\n\n  @else if $has-single-position != \"\" {\n    $pos: unquote($has-single-position + \"\");\n\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n\n  @else if $has-angle {\n    // Rotate degree for webkit\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n","@function _linear-positions-parser($pos) {\n  $type: type-of(nth($pos, 1));\n  $spec: null;\n  $degree: null;\n  $side: null;\n  $corner: null;\n  $length: length($pos);\n  // Parse Side and corner positions\n  @if ($length > 1) {\n    @if nth($pos, 1) == \"to\" { // Newer syntax\n      $side: nth($pos, 2);\n\n      @if $length == 2 { // eg. to top\n        // Swap for backwards compatibility\n        $degree: _position-flipper(nth($pos, 2));\n      }\n      @else if $length == 3 { // eg. to top left\n        $corner: nth($pos, 3);\n      }\n    }\n    @else if $length == 2 { // Older syntax (\"top left\")\n      $side: _position-flipper(nth($pos, 1));\n      $corner: _position-flipper(nth($pos, 2));\n    }\n\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    $spec: to $side $corner;\n  }\n  @else if $length == 1 {\n    // Swap for backwards compatibility\n    @if $type == string {\n      $degree: $pos;\n      $spec: to _position-flipper($pos);\n    }\n    @else {\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\n      $spec: $pos;\n    }\n  }\n  $degree: unquote($degree + \",\");\n  $spec:   unquote($spec + \",\");\n  @return $degree $spec;\n}\n\n@function _position-flipper($pos) {\n  @return if($pos == left, right, null)\n         if($pos == right, left, null)\n         if($pos == top, bottom, null)\n         if($pos == bottom, top, null);\n}\n","// Private function for linear-gradient-parser\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\n  $val-1: str-slice($first-val, 1, $has-multiple-vals - 1);\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\n  $val-3: null;\n  $has-val-3: str-index($val-2, \" \");\n\n  @if $has-val-3 {\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\n    $val-2: str-slice($val-2, 1, $has-val-3 - 1);\n  }\n\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\n  $pos: unquote($pos + \"\");\n\n  // Use old spec for webkit\n  @if $val-1 == \"to\" {\n    @return (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  // Bring the code up to spec\n  @else {\n    @return (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n}\n","@function _radial-arg-parser($g1, $g2, $pos, $shape-size) {\n  @each $value in $g1, $g2 {\n    $first-val: nth($value, 1);\n    $pos-type:  type-of($first-val);\n    $spec-at-index: null;\n\n    // Determine if spec was passed to mixin\n    @if type-of($value) == list {\n      $spec-at-index: if(index($value, at), index($value, at), false);\n    }\n    @if $spec-at-index {\n      @if $spec-at-index > 1 {\n        @for $i from 1 through ($spec-at-index - 1) {\n          $shape-size: $shape-size nth($value, $i);\n        }\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      @else if $spec-at-index == 1 {\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      $g1: null;\n    }\n\n    // If not spec calculate correct values\n    @else {\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\n        @if ($pos-type == number)\n        or ($first-val == \"center\")\n        or ($first-val == \"top\")\n        or ($first-val == \"right\")\n        or ($first-val == \"bottom\")\n        or ($first-val == \"left\") {\n\n          $pos: $value;\n\n          @if $pos == $g1 {\n            $g1: null;\n          }\n        }\n\n        @else if\n           ($first-val == \"ellipse\")\n        or ($first-val == \"circle\")\n        or ($first-val == \"closest-side\")\n        or ($first-val == \"closest-corner\")\n        or ($first-val == \"farthest-side\")\n        or ($first-val == \"farthest-corner\")\n        or ($first-val == \"contain\")\n        or ($first-val == \"cover\") {\n\n          $shape-size: $value;\n\n          @if $value == $g1 {\n            $g1: null;\n          }\n\n          @else if $value == $g2 {\n            $g2: null;\n          }\n        }\n      }\n    }\n  }\n  @return $g1, $g2, $pos, $shape-size;\n}\n","@function _radial-positions-parser($gradient-pos) {\n  $shape-size: nth($gradient-pos, 1);\n  $pos:        nth($gradient-pos, 2);\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\n             unquote(if($shape-size, \"#{$shape-size},\", null));\n  $pos-spec: if($pos, \"at #{$pos}\", null);\n\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\n\n  // Add comma\n  @if ($spec != \"  \") {\n    $spec: \"#{$spec},\";\n  }\n\n  @return $pre-spec $spec;\n}\n","@function _radial-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $is-spec-syntax: str-index($first-val, \"at\");\n\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n    $pos: append($pos, $keyword, comma);\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if $is-spec-syntax == 1 {\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\n\n    $gradients: (\n      webkit-image: null,\n      spec-image: $image\n    );\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n","// User for linear and radial gradients within background-image or border-image properties\n\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\n  $pre-spec: null;\n  $spec: null;\n  $vendor-gradients: null;\n  @if $gradient-type == linear {\n    @if $gradient-positions {\n      $pre-spec: nth($gradient-positions, 1);\n      $spec:     nth($gradient-positions, 2);\n    }\n  }\n  @else if $gradient-type == radial {\n    $pre-spec: nth($gradient-positions, 1);\n    $spec:     nth($gradient-positions, 2);\n  }\n\n  @if $vendor {\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\n  }\n  @else if $vendor == false {\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\n    $vendor-gradients: unquote($vendor-gradients);\n  }\n  @return $vendor-gradients;\n}\n","@function _shape-size-stripper($shape-size) {\n  $shape-size-spec: null;\n  @each $value in $shape-size {\n    @if ($value == \"cover\") or ($value == \"contain\") {\n      $value: null;\n    }\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\n  }\n  @return $shape-size-spec;\n}\n","//************************************************************************//\n// Helper function for linear/radial-gradient-parsers.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _str-to-num($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    }\n\n    @else if $character == \".\" {\n      $divider: 1;\n    }\n\n    @else {\n      @if not $index {\n        $result: if($minus, $result * -1, $result);\n        @return _convert-units($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n\n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n  @return if($minus, $result * -1, $result);\n}\n","// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\n\n@mixin animation($animations...) {\n  @include prefixer(animation, $animations, webkit moz spec);\n}\n\n@mixin animation-name($names...) {\n  @include prefixer(animation-name, $names, webkit moz spec);\n}\n\n@mixin animation-duration($times...) {\n  @include prefixer(animation-duration, $times, webkit moz spec);\n}\n\n@mixin animation-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\n}\n\n@mixin animation-iteration-count($values...) {\n  // infinite | <number>\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\n}\n\n@mixin animation-direction($directions...) {\n  // normal | alternate\n  @include prefixer(animation-direction, $directions, webkit moz spec);\n}\n\n@mixin animation-play-state($states...) {\n  // running | paused\n  @include prefixer(animation-play-state, $states, webkit moz spec);\n}\n\n@mixin animation-delay($times...) {\n  @include prefixer(animation-delay, $times, webkit moz spec);\n}\n\n@mixin animation-fill-mode($modes...) {\n  // none | forwards | backwards | both\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\n}\n","@mixin appearance($value) {\n  @include prefixer(appearance, $value, webkit moz ms o spec);\n}\n","@mixin backface-visibility($visibility) {\n  @include prefixer(backface-visibility, $visibility, webkit spec);\n}\n","//************************************************************************//\n// Background property for adding multiple backgrounds using shorthand\n// notation.\n//************************************************************************//\n\n@mixin background($backgrounds...) {\n  $webkit-backgrounds: ();\n  $spec-backgrounds: ();\n\n  @each $background in $backgrounds {\n    $webkit-background: ();\n    $spec-background: ();\n    $background-type: type-of($background);\n\n    @if $background-type == string or $background-type == list {\n      $background-str: if($background-type == list, nth($background, 1), $background);\n\n      $url-str:       str-slice($background-str, 1, 3);\n      $gradient-type: str-slice($background-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n    }\n\n    @else {\n      $webkit-background: $background;\n      $spec-background:   $background;\n    }\n\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\n  }\n\n  background: $webkit-backgrounds;\n  background: $spec-backgrounds;\n}\n","//************************************************************************//\n// Background-image property for adding multiple background images with\n// gradients, or for stringing multiple gradients together.\n//************************************************************************//\n\n@mixin background-image($images...) {\n  $webkit-images: ();\n  $spec-images: ();\n\n  @each $image in $images {\n    $webkit-image: ();\n    $spec-image: ();\n\n    @if (type-of($image) == string) {\n      $url-str:       str-slice($image, 1, 3);\n      $gradient-type: str-slice($image, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-image: $image;\n        $spec-image:   $image;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser($image);\n        $webkit-image:  map-get($gradients, webkit-image);\n        $spec-image:    map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser($image);\n        $webkit-image: map-get($gradients, webkit-image);\n        $spec-image:   map-get($gradients, spec-image);\n      }\n    }\n\n    $webkit-images: append($webkit-images, $webkit-image, comma);\n    $spec-images:   append($spec-images,   $spec-image,   comma);\n  }\n\n  background-image: $webkit-images;\n  background-image: $spec-images;\n}\n","@mixin border-image($borders...) {\n  $webkit-borders: ();\n  $spec-borders: ();\n\n  @each $border in $borders {\n    $webkit-border: ();\n    $spec-border: ();\n    $border-type: type-of($border);\n\n    @if $border-type == string or list {\n      $border-str: if($border-type == list, nth($border, 1), $border);\n\n      $url-str:       str-slice($border-str, 1, 3);\n      $gradient-type: str-slice($border-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n    }\n\n    @else {\n      $webkit-border: $border;\n      $spec-border:   $border;\n    }\n\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\n  }\n\n  -webkit-border-image: $webkit-borders;\n          border-image: $spec-borders;\n          border-style: solid;\n}\n\n//Examples:\n// @include border-image(url(\"image.png\"));\n// @include border-image(url(\"image.png\") 20 stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow));\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\n","@mixin calc($property, $value) {\n  #{$property}: -webkit-calc(#{$value});\n  #{$property}: calc(#{$value});\n}\n","@mixin columns($arg: auto) {\n  // <column-count> || <column-width>\n  @include prefixer(columns, $arg, webkit moz spec);\n}\n\n@mixin column-count($int: auto) {\n  // auto || integer\n  @include prefixer(column-count, $int, webkit moz spec);\n}\n\n@mixin column-gap($length: normal) {\n  // normal || length\n  @include prefixer(column-gap, $length, webkit moz spec);\n}\n\n@mixin column-fill($arg: auto) {\n  // auto || length\n  @include prefixer(column-fill, $arg, webkit moz spec);\n}\n\n@mixin column-rule($arg) {\n  // <border-width> || <border-style> || <color>\n  @include prefixer(column-rule, $arg, webkit moz spec);\n}\n\n@mixin column-rule-color($color) {\n  @include prefixer(column-rule-color, $color, webkit moz spec);\n}\n\n@mixin column-rule-style($style: none) {\n  // none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\n  @include prefixer(column-rule-style, $style, webkit moz spec);\n}\n\n@mixin column-rule-width ($width: none) {\n  @include prefixer(column-rule-width, $width, webkit moz spec);\n}\n\n@mixin column-span($arg: none) {\n  // none || all\n  @include prefixer(column-span, $arg, webkit moz spec);\n}\n\n@mixin column-width($length: auto) {\n  // auto || length\n  @include prefixer(column-width, $length, webkit moz spec);\n}\n","@mixin filter($function: none) {\n  // <filter-function> [<filter-function]* | none\n  @include prefixer(filter, $function, webkit spec);\n}\n","// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n// flex | inline-flex\n  @if $value == \"flex\" {\n    // 2009\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    // 2012\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox; // 2011 (IE 10)\n    display: flex;\n  } @else if $value == \"inline-flex\" {\n    display: -webkit-inline-box;\n    display: -moz-inline-box;\n    display: inline-box;\n\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  } @else {\n    display: $value;\n  }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n  // Grab flex-grow for older browsers.\n  $flex-grow: nth($value, 1);\n\n  // 2009\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n  // 2011 (IE 10), 2012\n  @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n  // Alt values.\n  $value-2009: $value;\n  $value-2011: $value;\n  $direction: normal;\n\n  @if $value == row {\n    $value-2009: horizontal;\n  } @else if $value == \"row-reverse\" {\n    $value-2009: horizontal;\n    $direction: reverse;\n  } @else if $value == column {\n    $value-2009: vertical;\n  } @else if $value == \"column-reverse\" {\n    $value-2009: vertical;\n    $direction: reverse;\n  }\n\n  // 2009\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\n  @include prefixer(box-direction, $direction, webkit moz spec);\n\n  // 2012\n  @include prefixer(flex-direction, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n  // Alt values\n  $alt-value: $value;\n  @if $value == nowrap {\n    $alt-value: single;\n  } @else if $value == wrap {\n    $alt-value: multiple;\n  } @else if $value == \"wrap-reverse\" {\n    $alt-value: multiple;\n  }\n\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n  @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n  // 2009\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n  // 2012\n  @include prefixer(order, $int, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n  @include prefixer(flex-grow, $number, webkit moz spec);\n  -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n  @include prefixer(flex-shrink, $number, webkit moz spec);\n  -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n  @include prefixer(flex-basis, $width, webkit moz spec);\n  -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content($value: flex-start) {\n\n  // Alt values.\n  $alt-value: $value;\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  } @else if $value == \"space-between\" {\n    $alt-value: justify;\n  } @else if $value == \"space-around\" {\n    $alt-value: distribute;\n  }\n\n  // 2009\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n  $alt-value: $value;\n\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  // 2009\n  @include prefixer(box-align, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(align-items, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-align: $alt-value;\n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  // 2012\n  @include prefixer(align-self, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  } @else if $value == \"space-between\" {\n    $value-2011: justify;\n  } @else if $value == \"space-around\" {\n    $value-2011: distribute;\n  }\n\n  // 2012\n  @include prefixer(align-content, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-line-pack: $value-2011;\n}\n","@mixin font-face(\n  $font-family,\n  $file-path,\n  $weight: normal,\n  $style: normal,\n  $asset-pipeline: $asset-pipeline,\n  $file-formats: eot woff2 woff ttf svg) {\n\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\n\n  @font-face {\n    font-family: $font-family;\n    font-style: $style;\n    font-weight: $weight;\n\n    src: font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats,\n      $font-url-prefix\n    );\n  }\n}\n","@mixin font-feature-settings($settings...) {\n  @if length($settings) == 0 { $settings: none; }\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\n}\n","// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\n@mixin hidpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min--moz-device-pixel-ratio: $ratio),\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\n  only screen and (min-resolution: round($ratio * 96dpi)),\n  only screen and (min-resolution: $ratio * 1dppx) {\n    @content;\n  }\n}\n","@mixin hyphens($hyphenation: none) {\n  // none | manual | auto\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\n}\n","@mixin image-rendering ($mode:auto) {\n\n  @if ($mode == crisp-edges) {\n    -ms-interpolation-mode: nearest-neighbor; // IE8+\n    image-rendering: -moz-crisp-edges;\n    image-rendering: -o-crisp-edges;\n    image-rendering: -webkit-optimize-contrast;\n    image-rendering: crisp-edges;\n  }\n\n  @else {\n    image-rendering: $mode;\n  }\n}\n","// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\n@mixin keyframes($name) {\n  $original-prefix-for-webkit:    $prefix-for-webkit;\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\n  $original-prefix-for-opera:     $prefix-for-opera;\n  $original-prefix-for-spec:      $prefix-for-spec;\n\n  @if $original-prefix-for-webkit {\n    @include disable-prefix-for-all();\n    $prefix-for-webkit: true !global;\n    @-webkit-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  @if $original-prefix-for-mozilla {\n    @include disable-prefix-for-all();\n    $prefix-for-mozilla: true !global;\n    @-moz-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\n\n  @if $original-prefix-for-spec {\n    @keyframes #{$name} {\n      @content;\n    }\n  }\n}\n","@mixin linear-gradient($pos, $g1, $g2: null,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $fallback: null) {\n  // Detect what type of value exists in $pos\n  $pos-type: type-of(nth($pos, 1));\n  $pos-spec: null;\n  $pos-degree: null;\n\n  // If $pos is missing from mixin, reassign vars and add default position\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\n    $g10: $g9; $g9: $g8; $g8: $g7; $g7: $g6; $g6: $g5;\n    $g5: $g4; $g4: $g3; $g3: $g2; $g2: $g1; $g1: $pos;\n    $pos: null;\n  }\n\n  @if $pos {\n    $positions: _linear-positions-parser($pos);\n    $pos-degree: nth($positions, 1);\n    $pos-spec:   nth($positions, 2);\n  }\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Set $g1 as the default fallback color\n  $fallback-color: nth($g1, 1);\n\n  // If $fallback is a color use that color as the fallback color\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  background-color: $fallback-color;\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\n}\n","@mixin perspective($depth: none) {\n  // none | <length>\n  @include prefixer(perspective, $depth, webkit moz spec);\n}\n\n@mixin perspective-origin($value: 50% 50%) {\n  @include prefixer(perspective-origin, $value, webkit moz spec);\n}\n","@mixin placeholder {\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content;\n    }\n  }\n}\n","// Requires Sass 3.1+\n@mixin radial-gradient($g1, $g2,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $pos: null,\n                       $shape-size: null,\n                       $fallback: null) {\n\n  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);\n  $g1:  nth($data, 1);\n  $g2:  nth($data, 2);\n  $pos: nth($data, 3);\n  $shape-size: nth($data, 4);\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Strip deprecated cover/contain for spec\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  // Set $g1 as the default fallback color\n  $first-color: nth($full, 1);\n  $fallback-color: nth($first-color, 1);\n\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  // Add Commas and spaces\n  $shape-size: if($shape-size, \"#{$shape-size}, \", null);\n  $pos:        if($pos, \"#{$pos}, \", null);\n  $pos-spec:   if($pos, \"at #{$pos}\", null);\n  $shape-size-spec: if(($shape-size-spec != \" \") and ($pos == null), \"#{$shape-size-spec}, \", \"#{$shape-size-spec} \");\n\n  background-color:  $fallback-color;\n  background-image: -webkit-radial-gradient(#{$pos}#{$shape-size}#{$full});\n  background-image: radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full});\n}\n","@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","@mixin text-decoration($value) {\n// <text-decoration-line> || <text-decoration-style> || <text-decoration-color>\n  @include prefixer(text-decoration, $value, moz);\n}\n\n@mixin text-decoration-line($line: none) {\n// none || underline || overline || line-through\n  @include prefixer(text-decoration-line, $line, moz);\n}\n\n@mixin text-decoration-style($style: solid) {\n// solid || double || dotted || dashed || wavy\n  @include prefixer(text-decoration-style, $style, moz webkit);\n}\n\n@mixin text-decoration-color($color: currentColor) {\n// currentColor || <color>\n  @include prefixer(text-decoration-color, $color, moz);\n}\n","@mixin transform($property: none) {\n  // none | <transform-function>\n  @include prefixer(transform, $property, webkit moz ms o spec);\n}\n\n@mixin transform-origin($axes: 50%) {\n  // x-axis - left | center | right  | length | %\n  // y-axis - top  | center | bottom | length | %\n  // z-axis -                          length\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\n}\n\n@mixin transform-style($style: flat) {\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\n}\n","// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\n// Example: @include transition (all 2s ease-in-out);\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\n//          @include transition-property (transform, opacity);\n\n@mixin transition($properties...) {\n  // Fix for vendor-prefix transform property\n  $needs-prefixes: false;\n  $webkit: ();\n  $moz: ();\n  $spec: ();\n\n  // Create lists for vendor-prefixed transform\n  @each $list in $properties {\n    @if nth($list, 1) == \"transform\" {\n      $needs-prefixes: true;\n      $list1: -webkit-transform;\n      $list2: -moz-transform;\n      $list3: ();\n\n      @each $var in $list {\n        $list3: join($list3, $var);\n\n        @if $var != \"transform\" {\n          $list1: join($list1, $var);\n          $list2: join($list2, $var);\n        }\n      }\n\n      $webkit: append($webkit, $list1);\n      $moz:    append($moz,    $list2);\n      $spec:   append($spec,   $list3);\n    } @else {\n      $webkit: append($webkit, $list, comma);\n      $moz:    append($moz,    $list, comma);\n      $spec:   append($spec,   $list, comma);\n    }\n  }\n\n  @if $needs-prefixes {\n    -webkit-transition: $webkit;\n       -moz-transition: $moz;\n            transition: $spec;\n  } @else {\n    @if length($properties) >= 1 {\n      @include prefixer(transition, $properties, webkit moz spec);\n    } @else {\n      $properties: all 0.15s ease-out 0s;\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n  }\n}\n\n@mixin transition-property($properties...) {\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\n     -moz-transition-property: transition-property-names($properties, \"moz\");\n          transition-property: transition-property-names($properties, false);\n}\n\n@mixin transition-duration($times...) {\n  @include prefixer(transition-duration, $times, webkit moz spec);\n}\n\n@mixin transition-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\n}\n\n@mixin transition-delay($times...) {\n  @include prefixer(transition-delay, $times, webkit moz spec);\n}\n","@mixin user-select($value: none) {\n  @include prefixer(user-select, $value, webkit moz ms spec);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-color` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-left-color: #e8ae1a;\n///     border-right-color: #76cd9c;\n///     border-top-color: #a60b55;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-color`\n\n@mixin border-color($vals...) {\n  @include directional-property(border, color, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-radius` on both corners on the side of a box.\n///\n/// @param {Number} $radii\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element-one {\n///     @include border-top-radius(5px);\n///   }\n///\n///   .element-two {\n///     @include border-left-radius(3px);\n///   }\n///\n/// @example css - CSS Output\n///   .element-one {\n///     border-top-left-radius: 5px;\n///     border-top-right-radius: 5px;\n///   }\n///\n///   .element-two {\n///     border-bottom-left-radius: 3px;\n///     border-top-left-radius: 3px;\n///   }\n///\n/// @output `border-radius`\n\n@mixin border-top-radius($radii) {\n  border-top-left-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-right-radius($radii) {\n  border-bottom-right-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-bottom-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-bottom-right-radius: $radii;\n}\n\n@mixin border-left-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-top-left-radius: $radii;\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-style` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dashed null solid);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: solid;\n///     border-top-style: dashed;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-style`\n\n@mixin border-style($vals...) {\n  @include directional-property(border, style, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-width` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-width(1em null 20px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-width: 20px;\n///     border-top-width: 1em;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-width`\n\n@mixin border-width($vals...) {\n  @include directional-property(border, width, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Generates variables for all buttons. Please note that you must use interpolation on the variable: `#{$all-buttons}`.\n///\n/// @example scss - Usage\n///   #{$all-buttons} {\n///     background-color: #f00;\n///   }\n///\n///   #{$all-buttons-focus},\n///   #{$all-buttons-hover} {\n///     background-color: #0f0;\n///   }\n///\n///   #{$all-buttons-active} {\n///     background-color: #00f;\n///   }\n///\n/// @example css - CSS Output\n///   button,\n///   input[type=\"button\"],\n///   input[type=\"reset\"],\n///   input[type=\"submit\"] {\n///     background-color: #f00;\n///   }\n///\n///   button:focus,\n///   input[type=\"button\"]:focus,\n///   input[type=\"reset\"]:focus,\n///   input[type=\"submit\"]:focus,\n///   button:hover,\n///   input[type=\"button\"]:hover,\n///   input[type=\"reset\"]:hover,\n///   input[type=\"submit\"]:hover {\n///     background-color: #0f0;\n///   }\n///\n///   button:active,\n///   input[type=\"button\"]:active,\n///   input[type=\"reset\"]:active,\n///   input[type=\"submit\"]:active {\n///     background-color: #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n///\n/// @todo Remove double assigned variables (Lines 59–62) in v5.0.0\n\n$buttons-list: 'button',\n               'input[type=\"button\"]',\n               'input[type=\"reset\"]',\n               'input[type=\"submit\"]';\n\n$all-buttons:        assign-inputs($buttons-list);\n$all-buttons-active: assign-inputs($buttons-list, active);\n$all-buttons-focus:  assign-inputs($buttons-list, focus);\n$all-buttons-hover:  assign-inputs($buttons-list, hover);\n\n$all-button-inputs:        $all-buttons;\n$all-button-inputs-active: $all-buttons-active;\n$all-button-inputs-focus:  $all-buttons-focus;\n$all-button-inputs-hover:  $all-buttons-hover;\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Truncates text and adds an ellipsis to represent overflow.\n///\n/// @param {Number} $width [100%]\n///   Max-width for the string to respect before being truncated\n///\n/// @example scss - Usage\n///   .element {\n///     @include ellipsis;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: inline-block;\n///     max-width: 100%;\n///     overflow: hidden;\n///     text-overflow: ellipsis;\n///     white-space: nowrap;\n///     word-wrap: normal;\n///   }\n\n@mixin ellipsis($width: 100%) {\n  display: inline-block;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n","@charset \"UTF-8\";\n\n/// Georgia font stack.\n///\n/// @type List\n\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\n\n/// Helvetica font stack.\n///\n/// @type List\n\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n\n/// Lucida Grande font stack.\n///\n/// @type List\n\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\n\n/// Monospace font stack.\n///\n/// @type List\n\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\n\n/// Verdana font stack.\n///\n/// @type List\n\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\n","/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\n///\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\n///\n/// @example scss - Usage\n///   .element {\n///     @include hide-text;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     overflow: hidden;\n///     text-indent: 101%;\n///     white-space: nowrap;\n///   }\n///\n/// @todo Remove height argument in v5.0.0\n\n@mixin hide-text($height: null) {\n  overflow: hidden;\n  text-indent: 101%;\n  white-space: nowrap;\n\n  @if $height {\n    @warn \"The `hide-text` mixin has changed and no longer requires a height. The height argument will no longer be accepted in v5.0.0\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `margin` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include margin(null 10px 3em 20vh);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin-bottom: 3em;\n///     margin-left: 20vh;\n///     margin-right: 10px;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `margin`\n\n@mixin margin($vals...) {\n  @include directional-property(margin, false, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `padding` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include padding(12vh null 10px 5%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     padding-bottom: 10px;\n///     padding-left: 5%;\n///     padding-top: 12vh;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `padding`\n\n@mixin padding($vals...) {\n  @include directional-property(padding, false, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\n///\n/// @param {Position} $position [relative]\n///   A CSS position value\n///\n/// @param {Arglist} $coordinates [null null null null]\n///   List of values that correspond to the 4-value syntax for the edges of a box\n///\n/// @example scss - Usage\n///   .element {\n///     @include position(absolute, 0 null null 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     left: 10em;\n///     position: absolute;\n///     top: 0;\n///   }\n///\n/// @require {function} is-length\n/// @require {function} unpack\n\n@mixin position($position: relative, $coordinates: null null null null) {\n  @if type-of($position) == list {\n    $coordinates: $position;\n    $position: relative;\n  }\n\n  $coordinates: unpack($coordinates);\n\n  $offsets: (\n    top:    nth($coordinates, 1),\n    right:  nth($coordinates, 2),\n    bottom: nth($coordinates, 3),\n    left:   nth($coordinates, 4)\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n","@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\n  @if $asset-pipeline {\n    background-image: image-url(\"#{$filename}.#{$extension}\");\n  } @else {\n    background-image:       url(\"#{$filename}.#{$extension}\");\n  }\n\n  @include hidpi {\n    @if $asset-pipeline {\n      @if $retina-filename {\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    } @else {\n      @if $retina-filename {\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    background-size: $background-size;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Sets the `width` and `height` of the element.\n///\n/// @param {List} $size\n///   A list of at most 2 size values.\n///\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\n///\n/// @example scss - Usage\n///   .first-element {\n///     @include size(2em);\n///   }\n///\n///   .second-element {\n///     @include size(auto 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .first-element {\n///     width: 2em;\n///     height: 2em;\n///   }\n///\n///   .second-element {\n///     width: auto;\n///     height: 10em;\n///   }\n///\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\n\n@mixin size($value) {\n  $width: nth($value, 1);\n  $height: $width;\n\n  @if length($value) > 1 {\n    $height: nth($value, 2);\n  }\n\n  @if is-size($height) {\n    height: $height;\n  } @else {\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\n  }\n\n  @if is-size($width) {\n    width: $width;\n  } @else {\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Generates variables for all text-based inputs. Please note that you must use interpolation on the variable: `#{$all-text-inputs}`.\n///\n/// @example scss - Usage\n///   #{$all-text-inputs} {\n///     border: 1px solid #f00;\n///   }\n///\n///   #{$all-text-inputs-focus},\n///   #{$all-text-inputs-hover} {\n///     border: 1px solid #0f0;\n///   }\n///\n///   #{$all-text-inputs-active} {\n///     border: 1px solid #00f;\n///   }\n///\n/// @example css - CSS Output\n///   input[type=\"color\"],\n///   input[type=\"date\"],\n///   input[type=\"datetime\"],\n///   input[type=\"datetime-local\"],\n///   input[type=\"email\"],\n///   input[type=\"month\"],\n///   input[type=\"number\"],\n///   input[type=\"password\"],\n///   input[type=\"search\"],\n///   input[type=\"tel\"],\n///   input[type=\"text\"],\n///   input[type=\"time\"],\n///   input[type=\"url\"],\n///   input[type=\"week\"],\n///   textarea {\n///     border: 1px solid #f00;\n///   }\n///\n///   input[type=\"color\"]:focus,\n///   input[type=\"date\"]:focus,\n///   input[type=\"datetime\"]:focus,\n///   input[type=\"datetime-local\"]:focus,\n///   input[type=\"email\"]:focus,\n///   input[type=\"month\"]:focus,\n///   input[type=\"number\"]:focus,\n///   input[type=\"password\"]:focus,\n///   input[type=\"search\"]:focus,\n///   input[type=\"tel\"]:focus,\n///   input[type=\"text\"]:focus,\n///   input[type=\"time\"]:focus,\n///   input[type=\"url\"]:focus,\n///   input[type=\"week\"]:focus,\n///   textarea:focus,\n///   input[type=\"color\"]:hover,\n///   input[type=\"date\"]:hover,\n///   input[type=\"datetime\"]:hover,\n///   input[type=\"datetime-local\"]:hover,\n///   input[type=\"email\"]:hover,\n///   input[type=\"month\"]:hover,\n///   input[type=\"number\"]:hover,\n///   input[type=\"password\"]:hover,\n///   input[type=\"search\"]:hover,\n///   input[type=\"tel\"]:hover,\n///   input[type=\"text\"]:hover,\n///   input[type=\"time\"]:hover,\n///   input[type=\"url\"]:hover,\n///   input[type=\"week\"]:hover,\n///   textarea:hover {\n///     border: 1px solid #0f0;\n///   }\n///\n///   input[type=\"color\"]:active,\n///   input[type=\"date\"]:active,\n///   input[type=\"datetime\"]:active,\n///   input[type=\"datetime-local\"]:active,\n///   input[type=\"email\"]:active,\n///   input[type=\"month\"]:active,\n///   input[type=\"number\"]:active,\n///   input[type=\"password\"]:active,\n///   input[type=\"search\"]:active,\n///   input[type=\"tel\"]:active,\n///   input[type=\"text\"]:active,\n///   input[type=\"time\"]:active,\n///   input[type=\"url\"]:active,\n///   input[type=\"week\"]:active,\n///   textarea:active {\n///     border: 1px solid #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n\n$text-inputs-list: 'input[type=\"color\"]',\n                   'input[type=\"date\"]',\n                   'input[type=\"datetime\"]',\n                   'input[type=\"datetime-local\"]',\n                   'input[type=\"email\"]',\n                   'input[type=\"month\"]',\n                   'input[type=\"number\"]',\n                   'input[type=\"password\"]',\n                   'input[type=\"search\"]',\n                   'input[type=\"tel\"]',\n                   'input[type=\"text\"]',\n                   'input[type=\"time\"]',\n                   'input[type=\"url\"]',\n                   'input[type=\"week\"]',\n                   'input:not([type])',\n                   'textarea';\n\n$all-text-inputs:        assign-inputs($text-inputs-list);\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\n","@charset \"UTF-8\";\n\n/// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\n///\n/// Timing functions are the same as demoed here: http://jqueryui.com/resources/demos/effect/easing.html\n///\n/// @type cubic-bezier\n\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n","@mixin triangle($size, $color, $direction) {\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n  height: 0;\n  width: 0;\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n    } @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    } @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  } @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  } @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to change the `word-wrap` property.\n///\n/// @param {String} $wrap [break-word]\n///   Value for the `word-break` property.\n///\n/// @example scss - Usage\n///   .wrapper {\n///     @include word-wrap(break-word);\n///   }\n///\n/// @example css - CSS Output\n///   .wrapper {\n///     overflow-wrap: break-word;\n///     word-break: break-all;\n///     word-wrap: break-word;\n///   }\n\n@mixin word-wrap($wrap: break-word) {\n  overflow-wrap: $wrap;\n  word-wrap: $wrap;\n\n  @if $wrap == break-word {\n    word-break: break-all;\n  } @else {\n    word-break: $wrap;\n  }\n}\n","// The following features have been deprecated and will be removed in the next MAJOR version release\n\n@mixin inline-block {\n  display: inline-block;\n\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\n}\n\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\n\n  @if type-of($style) == string and type-of($base-color) == color {\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == string and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: #4294f0;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == color {\n    $base-color: $style;\n    $style: simple;\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: $style;\n    $style: simple;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == number {\n    $padding: $base-color;\n    $text-size: $style;\n    $base-color: #4294f0;\n    $style: simple;\n\n    @if $padding == #4294f0 {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\n}\n\n// Selector Style Button\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\n  // Grayscale button\n  @if $type == simple and $b-color == grayscale($b-color) {\n    @include simple($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == shiny and $b-color == grayscale($b-color) {\n    @include shiny($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == pill and $b-color == grayscale($b-color) {\n    @include pill($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == flat and $b-color == grayscale($b-color) {\n    @include flat($b-color, true, $t-size, $pad);\n  }\n\n  // Colored button\n  @if $type == simple {\n    @include simple($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == shiny {\n    @include shiny($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == pill {\n    @include pill($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == flat {\n    @include flat($b-color, false, $t-size, $pad);\n  }\n}\n\n// Simple Button\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-decoration: none;\n  text-shadow: 0 1px 0 $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\n\n    @if $grayscale == true {\n      $border-active:       grayscale($border-active);\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    border: 1px solid $border-active;\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\n  }\n}\n\n// Shiny Button\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $border-bottom: grayscale($border-bottom);\n    $fourth-stop:   grayscale($fourth-stop);\n    $inset-shadow:  grayscale($inset-shadow);\n    $second-stop:   grayscale($second-stop);\n    $text-shadow:   grayscale($text-shadow);\n    $third-stop:    grayscale($third-stop);\n  }\n\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\n\n  border: 1px solid $border;\n  border-bottom: 1px solid $border-bottom;\n  border-radius: 5px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n\n  &:hover:not(:disabled) {\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\n\n    @if $grayscale == true {\n      $first-stop-hover:  grayscale($first-stop-hover);\n      $second-stop-hover: grayscale($second-stop-hover);\n      $third-stop-hover:  grayscale($third-stop-hover);\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\n    }\n\n    @include linear-gradient(top, $first-stop-hover  0%,\n                                  $second-stop-hover 50%,\n                                  $third-stop-hover  50%,\n                                  $fourth-stop-hover 100%);\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\n\n    @if $grayscale == true {\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\n  }\n}\n\n// Pill Button\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border-bottom: grayscale($border-bottom);\n    $border-sides:  grayscale($border-sides);\n    $border-top:    grayscale($border-top);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border-top;\n  border-color: $border-top $border-sides $border-bottom;\n  border-radius: 16px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: normal;\n  line-height: 1;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $border-bottom:       grayscale($border-bottom);\n      $border-sides:        grayscale($border-sides);\n      $border-top:          grayscale($border-top);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n      $text-shadow-hover:   grayscale($text-shadow-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    background-clip: padding-box;\n    border: 1px solid $border-top;\n    border-color: $border-top $border-sides $border-bottom;\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    text-shadow: 0 -1px 1px $text-shadow-hover;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\n\n    @if $grayscale == true {\n      $active-color:         grayscale($active-color);\n      $border-active:        grayscale($border-active);\n      $border-bottom-active: grayscale($border-bottom-active);\n      $inset-shadow-active:  grayscale($inset-shadow-active);\n      $text-shadow-active:   grayscale($text-shadow-active);\n    }\n\n    background: $active-color;\n    border: 1px solid $border-active;\n    border-bottom: 1px solid $border-bottom-active;\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\n    text-shadow: 0 -1px 1px $text-shadow-active;\n  }\n}\n\n// Flat Button\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n  }\n\n  background-color: $base-color;\n  border-radius: 3px;\n  border: 0;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-decoration: none;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled){\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\n\n    @if $grayscale == true {\n      $base-color-hover: grayscale($base-color-hover);\n    }\n\n    background-color: $base-color-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n\n    @if $grayscale == true {\n      $base-color-active: grayscale($base-color-active);\n    }\n\n    background-color: $base-color-active;\n    cursor: pointer;\n  }\n}\n\n// Flexible grid\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\n}\n\n// Flexible gutter\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\n}\n\n@function golden-ratio($value, $increment) {\n  @return modular-scale($increment, $value, $ratio: $golden);\n\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\n}\n\n@mixin box-sizing($box) {\n  @include prefixer(box-sizing, $box, webkit moz spec);\n\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\n}\n","//\n// Icon Font: Videobox\n//\n\n@font-face {\n  font-family: \"Videobox\";\n  src: url(\"/font/Videobox.eot\");\n  src: url(\"/font/Videobox.eot?#iefix\") format(\"embedded-opentype\"),\n       url(\"/font/Videobox.woff\") format(\"woff\"),\n       url(\"/font/Videobox.ttf\") format(\"truetype\"),\n       url(\"/font/Videobox.svg#Videobox\") format(\"svg\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: \"Videobox\";\n    src: url(\"/font/Videobox.svg#Videobox\") format(\"svg\");\n  }\n}\n\n[data-icon]:before { content: attr(data-icon); }\n\n[data-icon]:before,\n.vb-icon, [class^=\"vb-icon-\"], [class*=\" vb-icon-\"] {\n  display: inline-block;\n  font-family: \"Videobox\";\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  line-height: 1;\n  text-decoration: inherit;\n  text-rendering: optimizeLegibility;\n  text-transform: none;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-smoothing: antialiased;\n\n    font-size: 24px;\n    width: 1em;\n    height: 1em;\n}\n\n.vb-icon-circle:before { content: \"\\f100\"; }\n.vb-icon-close:before { content: \"\\f101\"; }\n.vb-icon-close-small:before { content: \"\\f102\"; }\n.vb-icon-fullscreen-enter:before { content: \"\\f106\"; }\n.vb-icon-fullscreen-exit:before { content: \"\\f107\"; }\n.vb-icon-next:before { content: \"\\f104\"; }\n.vb-icon-pause:before { content: \"\\f108\"; }\n.vb-icon-play:before { content: \"\\f103\"; }\n.vb-icon-prev:before { content: \"\\f105\"; }\n.vb-icon-volume-0:before { content: \"\\f109\"; }\n.vb-icon-volume-1:before { content: \"\\f10a\"; }\n.vb-icon-volume-2:before { content: \"\\f10b\"; }\n.vb-icon-volume-3:before { content: \"\\f10c\"; }\n\n$font-Videobox-circle: \"\\f100\";\n$font-Videobox-close: \"\\f101\";\n$font-Videobox-close-small: \"\\f102\";\n$font-Videobox-fullscreen-enter: \"\\f106\";\n$font-Videobox-fullscreen-exit: \"\\f107\";\n$font-Videobox-next: \"\\f104\";\n$font-Videobox-pause: \"\\f108\";\n$font-Videobox-play: \"\\f103\";\n$font-Videobox-prev: \"\\f105\";\n$font-Videobox-volume-0: \"\\f109\";\n$font-Videobox-volume-1: \"\\f10a\";\n$font-Videobox-volume-2: \"\\f10b\";\n$font-Videobox-volume-3: \"\\f10c\";",".vb-hover-animated {\r\n    @include transition(all $hover-duration ease-in-out);\r\n}\r\n\r\n.vb-line-fix {\r\n\twhite-space: nowrap;\r\n\tmax-width: 100%;\r\n\tdisplay: inline-block;\r\n}\r\n\r\n.vb-icon-circle-close-invert {\r\n\tposition: relative;\r\n\tdisplay: block;\r\n}\r\n\r\n.vb-icon-circle-close-invert:before,\r\n.vb-icon-circle-close-invert:after {\r\n\tdisplay: block;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n}\r\n\r\n.vb-icon-circle-close-invert:before {\r\n\tcontent: $font-Videobox-circle;\r\n}\r\n\r\n.vb-icon-circle-close-invert:after {\r\n\tcontent: $font-Videobox-close-small;\r\n\tcolor: #fff !important;\r\n}",".vb_video_cont {\r\n\tvertical-align: top;\r\n\ttext-align: center;\r\n    \r\n    img {\r\n        display: block;\r\n        max-width: 100%;\r\n        height: auto;\r\n        width: 100%;\r\n    }\r\n    \r\n    &, a {\r\n        @extend .vb-hover-animated;\r\n        \r\n        display: inline-block;\r\n        text-decoration: none;\r\n        color: $primary-color;\r\n        display: inline-block;\r\n        width: 100%;\r\n        \r\n        &:hover,\r\n        &:focus {\r\n            color: $primary-light;\r\n            \r\n            .vb_thub_wrap .vb-icon-play {\r\n                color: $primary-light;\r\n                background-color: rgba(0, 0, 0, 0.7);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.vb_video_title {\r\n\tdisplay: block;\r\n\tpadding: 8px 10px 0;\r\n    \r\n    &:empty {\r\n        display: none;\r\n    }\r\n}\r\n\r\n.vb_thub_wrap {\r\n\tposition: relative;\r\n\tdisplay: block;\r\n    \r\n    .vb-icon-play {\r\n        @extend .vb-hover-animated;\r\n        \r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        bottom: 50%;\r\n        right: 50%;\r\n        width: 3*$base-font-size;\r\n        height: 3*$base-font-size;\r\n        margin: -1.5*$base-font-size;\r\n        border-radius: 100%;\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n        font-size: 2*$base-font-size;\r\n        line-height: 3*$base-font-size;\r\n        color: #ffffff;\r\n        display: none;\r\n        box-shadow: 0px 0px 40px -5px #000;\r\n    }\r\n}\r\n\r\n.vb_play_button .vb_thub_wrap .vb-icon-play {\r\n\tdisplay: block;\r\n}",".vb_video_sizer {\r\n\tposition: relative;\r\n\tdisplay: block;\r\n\theight: 0;\r\n\toverflow: hidden;\r\n\tbackground-color: #000; \r\n    \r\n    iframe {\r\n        background-color: #000;\r\n        position: absolute;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        border: 0;\r\n    }\r\n}\r\n\r\n.vb_video_frame {\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\tmargin: 30px 0;\r\n\ttext-align: center;\r\n\tfont-size: 1.2em;\r\n\tcolor: $primary-color;\r\n}",".vb_gallery {\r\n\tpadding: 0;\r\n\tmargin: -12px;\r\n\tclear: both;\r\n    \r\n    @include display(flex);\r\n    @include flex-flow(row wrap);\r\n}\r\n\r\n.vb_video_cont.vb_gal {\r\n    margin: 12px;\r\n    \r\n    &:empty{\r\n        margin-top: 0;\r\n        margin-bottom: 0;\r\n    }\r\n}",".pagination {\r\n\tmargin: 15px 0;\r\n\tdisplay: inline-block;\r\n\tpadding-left: 0;\r\n\tmargin: 20px 0;\r\n    \r\n    &>li {\r\n        display: inline;\r\n        \r\n        &>a,\r\n        &>span {\r\n            @extend .vb-hover-animated;\r\n            \r\n            background-color: #fff;\r\n            color: $primary-color;\r\n            border: none;\r\n            font-weight: 400;\r\n            font-size: 0.625*$base-font-size;\r\n            padding: 0.3125*$base-font-size 0.625*$base-font-size;\r\n            text-decoration: none;\r\n            text-shadow: 0px 0px 10px $primary-light;\r\n                \r\n            &:hover,\r\n            &:focus {\r\n                color: $primary-color;\r\n                background-color: $primary-light;\r\n            }\r\n        }\r\n        \r\n        &+li {\r\n            \r\n            &>a,\r\n            &>span {\r\n                border-left: 1px solid #fff;\r\n                margin-left: 0;\r\n            }\r\n            \r\n        }\r\n        \r\n        &.active {\r\n            \r\n            &>a,\r\n            &>span {\r\n                color: $primary-color;\r\n                background-color: $primary-light;\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n}","#vbOverlay {    \r\n\tposition: fixed;\r\n\tz-index: 9999;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tcursor: pointer;\r\n\tvisibility: hidden;\r\n\tbackground-color: #000;\r\n    opacity: 0;\r\n    \r\n    @include transition(all $transition-duration ease-in-out);\r\n    \r\n    &.visible {\r\n        visibility: visible;\r\n        opacity: $overlay-opacity;\r\n    }\r\n}","#vbWrap {\r\n    position: absolute;\r\n\tz-index: 9999;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\theight: 100%;\r\n\tvisibility: hidden;\r\n\tpointer-events: none;\r\n\twidth: 100%;\r\n    \r\n    @include display(flex);\r\n    @include justify-content(center);\r\n    @include align-items(center);\r\n    \r\n    &.visible {\r\n        visibility: visible;\r\n        \r\n        &:not(.animating) #vbCenter {\r\n            @include transition(all $transition-duration ease-in-out);\r\n        }\r\n    }\r\n    \r\n    .animating {\r\n        overflow: hidden;\r\n    }\r\n}","#vbCenter {\r\n    box-sizing: border-box;\r\n\twidth: 100%;\r\n\tposition: relative;\r\n\tdisplay: block;\r\n}","#vbResponsive {    \r\n\tposition: relative;\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\theight: 0;\r\n\tpadding: 0;\r\n\toverflow: hidden;\r\n\tbackground-color: #000;\r\n\tpointer-events: all;\r\n\tz-index: 10;\r\n    box-shadow: 0px 0px 40px -5px #000;\r\n}","#vbVideo {\r\n\tbackground-color: #000;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tborder: 0;\r\n}","#vbBottomContainer {\r\n\twidth: 100%;\r\n\tposition: absolute;\r\n\tcolor: #fff;\r\n\tmax-height: 0;\r\n\toverflow: hidden;\r\n\tbackground-color: #000;\r\n\topacity: 0.5;\r\n\tpointer-events: all;\r\n\tz-index: 5;\r\n    font-size: 0.625 * $base-font-size;\r\n    box-shadow: 0px 0px 40px -5px #000;\r\n    \r\n    &.visible {\r\n        max-height: 200px;\r\n        \r\n        @include transition(opacity $transition-duration .1s ease-in-out);\r\n        \r\n        &:hover,\r\n        &:focus {\r\n            opacity: 1;\r\n            \r\n            @include transition-delay(0s);\r\n        }\r\n    }\r\n}\r\n\r\n#vbBottom {\r\n    box-sizing: border-box;\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\tpadding: 15px 15px 0;\r\n\ttext-align: left;\r\n\tfont-weight: 400;\r\n\tfont-size: 15px;\r\n}\r\n\r\n#vbCaption {\r\n\tmargin-bottom: 10px;\r\n\tdisplay: block;\r\n}","#vbCloseLink {\r\n    @extend .vb-hover-animated;\r\n    \r\n\tdisplay: inline-block;\r\n\tfloat: right;\r\n\ttext-transform: uppercase;\r\n\tline-height: 1em;\r\n\tpadding-left: 5px;\r\n\ttext-decoration: none;\r\n\tfont-size: 0.75 * $base-font-size;\r\n\tmargin: -5px -5px 10px 10px;\r\n\tcolor: inherit;\r\n    \r\n    &:hover,\r\n    &:focus {\r\n        text-decoration: none;\r\n        color: $primary-light;\r\n    }\r\n    \r\n    i {\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        font-size: 1.5 * $base-font-size;\r\n        padding-left: 4px;\r\n    }\r\n    \r\n    @include transition-delay(inherit);\r\n}\r\n\r\n#vbCloseText {\r\n\tdisplay: inline-block;\r\n\tvertical-align: middle;\r\n}","#vbiWrap {\r\n\twidth: 100%;\r\n\tposition: relative;\r\n\tcolor: $primary-color;\r\n\ttext-align: center;\r\n}","#vbiResponsive {\r\n\tposition: relative;\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\theight: 0;\r\n\tpadding: 0;\r\n\toverflow: hidden;\r\n\tbackground-color: #000;\r\n\tpadding-bottom: 56.25%;\r\n\tpointer-events: all;\r\n} ","#vbiVideo {\r\n\tbackground-color: #000;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tborder: 0;\r\n}","#vbiClose {\r\n    @extend .vb-hover-animated;\r\n    \r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    width: 48px;\r\n    height: 48px;\r\n    margin: -24px -24px 0 0;\r\n    font-size: 24px;\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    padding: 12px;\r\n    opacity: 0;\r\n\tz-index: 300;\r\n    box-sizing: border-box;\r\n}\r\n\r\n#vbiWrap:hover #vbiClose { \r\n\topacity: 1; \r\n}\r\n\r\n#vbiClose:hover,\r\n#vbiClose:focus {\r\n\tcolor: $primary-light;\r\n}",".vb_slider_outer {\r\n\twidth: 100%;\r\n\tcolor: $primary-color;\r\n    \r\n    @include display(flex);\r\n    @include flex-flow(row);\r\n    \r\n    .vb_slider_wrap {\r\n        @include flex(1 1 100%);\r\n        overflow: hidden;\r\n        padding: 0px;\r\n    }\r\n}",".vb_gallery.vb_slider {\r\n    margin: 0;\r\n    \r\n    @include flex-wrap(nowrap);\r\n    \r\n    .vb_video_cont.vb_gal {\r\n        margin: 12px;\r\n    }\r\n}",".vb_slider_outer {\r\n    \r\n    .vb_slider_prev,\r\n    .vb_slider_next {\r\n        @extend .vb-hover-animated;\r\n        \r\n        flex: 0 0 2*$base-font-size;\r\n        cursor: pointer;\r\n        position: relative;\r\n        margin: 15px 0;\r\n        \r\n        i {\r\n            position: absolute;\r\n            top: 50%;\r\n            margin-top: -24px;\r\n            font-size: 2*$base-font-size;\r\n        }\r\n        \r\n        &:hover,\r\n        &:focus {\r\n            color: $primary-light;\r\n        }\r\n    }\r\n    \r\n}","html.vb-html5-player, \r\nbody.vb-html5-player {\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n    background: #000;\r\n    \r\n    *:focus {\r\n        border: none;\r\n        outline: none;\r\n    }\r\n}\r\n\r\n#vb-html5-video {\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #000;\r\n}\r\n\r\n.video-js {\r\n    color: #fff;\r\n    background: #000;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    font-size: 0.625*$base-font-size;\r\n    line-height: 1em;\r\n    font-family: \"Roboto\", \"Arial\", \"Helvetica\", sans-serif;\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    text-decoration: none;\r\n    \r\n    @include user-select(none);\r\n}\r\n\r\n.video-js .vjs-control-text {\r\n\tborder: 0;\r\n\tclip: rect(0 0 0 0);\r\n\theight: 1px;\r\n\tmargin: -1px;\r\n\toverflow: hidden;\r\n\tpadding: 0;\r\n\tposition: absolute;\r\n\twidth: 1px;\r\n}\r\n\r\n.vjs-hidden {\r\n    display: none;\r\n}",".video-js .vjs-control-bar {\r\n    display: none;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 2*$base-font-size;\r\n    z-index: 3;\r\n    background: rgba(0, 0, 0, $overlay-opacity);\r\n    visibility: hidden;\r\n    opacity: 0;\r\n    \r\n    @include align-items(center);\r\n    @include display(flex);\r\n    @include transition(all $transition-duration ease-in-out);\r\n}\r\n\r\n.vjs-has-started .vjs-control-bar {\r\n    visibility: visible;\r\n    opacity: 1;\r\n}\r\n\r\n.vjs-has-started.vjs-user-inactive.vjs-playing:not(.vjs-audio) .vjs-control-bar {\r\n    visibility: hidden;\r\n    opacity: 0;\r\n}\r\n\r\n.vjs-control {\r\n    padding: 0;\r\n    margin: 0;\r\n    border: none;\r\n    background: none;\r\n    color: #fff;\r\n\theight: 2*$base-font-size;\r\n    \r\n    @include display(flex);\r\n    @include align-items(center);\r\n    \r\n    &:before {\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        width: 2*$base-font-size;\r\n        height: 2*$base-font-size;\r\n        text-align: center;\r\n        line-height: 2*$base-font-size;\r\n        cursor: pointer;\r\n    }\r\n}\r\n\r\n.vjs-live-control,\r\n.vjs-custom-control-spacer,\r\n.vjs-playback-rate,\r\n.vjs-chapters-button,\r\n.vjs-subtitles-button,\r\n.vjs-captions-button,\r\n.vjs-descriptions-button,\r\n.vjs-audio-button {\r\n    display: none;\r\n}",".vjs-poster {\r\n    background-color: #000;\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: 50% 50%;\r\n\tbackground-size: contain;\r\n    cursor: pointer;\r\n\tposition: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right : 0;\r\n    z-index: 2;\r\n}\r\n\r\n.vjs-has-started:not(.vjs-audio) .vjs-poster {\r\n    display: none;\r\n}",".video-js .vjs-tech {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n    z-index: 1;\r\n}",".vjs-big-play-button {\r\n    @extend .vb-icon; \r\n    @extend .vb-hover-animated;\r\n    \r\n    position: absolute;\r\n\ttop: 50%;\r\n\tbottom: 50%;\r\n\tleft: 50%;\r\n\tright: 50%;\r\n    z-index: 5;\r\n    margin: -5/3*$base-font-size;\r\n    border: none;\r\n    padding: 0;\r\n    width: 10/3*$base-font-size;\r\n    height: 10/3*$base-font-size;\r\n    color: #fff;\r\n    background-color: rgba(0, 0, 0, $overlay-opacity);\r\n    cursor: pointer;\r\n    border-radius: 100%;\r\n    box-shadow: 0px 0px 40px -5px #000;\r\n    \r\n    &:before {\r\n        content: $font-Videobox-play;\r\n        font-size: 2*$base-font-size;\r\n    }\r\n    \r\n    &:hover,\r\n    &:focus {\r\n        color: $primary-light;\r\n    }\r\n}\r\n\r\n.vjs-has-started .vjs-big-play-button {\r\n    display: none;\r\n}",".vjs-loading-spinner {\r\n    @extend .vb-icon; \r\n    \r\n    position: absolute;\r\n\ttop: 50%;\r\n\tbottom: 50%;\r\n\tleft: 50%;\r\n\tright: 50%;\r\n    z-index: 5;\r\n    margin: -5/3*$base-font-size;\r\n    border: none;\r\n    padding: 0;\r\n    width: 10/3*$base-font-size;\r\n    height: 10/3*$base-font-size;\r\n    display: none;\r\n    \r\n    &:before {\r\n        display: block;\r\n        content: $font-Videobox-circle;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        font-size: 10/3*$base-font-size;\r\n        color: rgba(0, 0, 0, 0);\r\n        text-shadow: 0px 0px 5*$base-font-size rgba(0, 0, 0, 0.7);\r\n        z-index: 2;\r\n    }\r\n    \r\n    &:after {\r\n        display: block;\r\n        content: \" \";\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: url('/images/spinner.svg') no-repeat;\r\n        background-position: 50% 50%;\r\n        background-size: 100% 100%;\r\n        z-index: 3;\r\n    }\r\n}\r\n\r\n.vjs-seeking, .vjs-waiting {\r\n    \r\n    .vjs-loading-spinner {\r\n        display: block;\r\n    }\r\n}",".vjs-play-control {\r\n    @extend .vb-icon; \r\n    @extend .vb-hover-animated;\r\n    \r\n    @include flex(0 0 2*$base-font-size);\r\n    \r\n    &:before {\r\n        content: $font-Videobox-play;\r\n    }\r\n    \r\n    &:hover {\r\n        color: $primary-light;\r\n    }\r\n}\r\n\r\n.vjs-playing .vjs-play-control:before {\r\n    content: $font-Videobox-pause;\r\n}",".vjs-volume-menu-button {\r\n    @extend .vb-icon; \r\n    @extend .vb-hover-animated;\r\n    \r\n    overflow: hidden;\r\n    \r\n    @include flex(0 0 2*$base-font-size);\r\n    \r\n    &:before { \r\n\t   flex: 0 0 2*$base-font-size;\r\n    }\r\n    \r\n    &.vjs-vol-3:before {\r\n        content: $font-Videobox-volume-3;\r\n    } \r\n    \r\n    &.vjs-vol-2:before {\r\n        content: $font-Videobox-volume-2;\r\n    }\r\n    \r\n    &.vjs-vol-1:before {\r\n        content: $font-Videobox-volume-1;\r\n    } \r\n    \r\n    &.vjs-vol-0:before {\r\n        content: $font-Videobox-volume-0;\r\n    }  \r\n    \r\n    &:hover,\r\n    &:focus {\r\n        color: $primary-light;\r\n        \r\n        @include flex(0 0 7*$base-font-size);\r\n    }\r\n    \r\n    .vjs-menu {\r\n        @include flex(1 1 0px);\r\n        \r\n        color: #fff;\r\n        \r\n        .vjs-menu-content {\r\n            padding: 0 $base-font-size/2;\r\n        }\r\n        \r\n        .vjs-volume-bar {\r\n            height: 0.25*$base-font-size;\r\n            background: rgba(255, 255, 255, 1 - $overlay-opacity);\r\n            position: relative;\r\n            \r\n            .vjs-volume-level {\r\n                @extend .vb-icon; \r\n                \r\n                height: 100%;\r\n                width: 100%;\r\n                background: rgb(255, 255, 255);\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                \r\n                &:after {\r\n                    content: $font-Videobox-circle;\r\n                    position: absolute;\r\n                    right: 0;\r\n                    margin: -$base-font-size/2;\r\n                    top: 0.125*$base-font-size;\r\n                    cursor: pointer;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",".vjs-time-control {\r\n    margin: 0 $base-font-size/2;\r\n}\r\n\r\n.vjs-time-divider, .vjs-duration, .vjs-remaining-time {\r\n    display: none;\r\n}",".vjs-progress-control {\r\n    @include flex(1 1 0px);\r\n    \r\n    .vjs-progress-holder {\r\n        height: 0.25*$base-font-size;\r\n        width: 100%;\r\n        margin: 0 0.5*$base-font-size;\r\n        position: relative;\r\n        background: rgba(255, 255, 255, 1 - $overlay-opacity);\r\n        cursor: pointer;\r\n        \r\n        .vjs-load-progress,\r\n        .vjs-mouse-display,\r\n        .vjs-play-progress {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            height: 100%;\r\n        }\r\n        \r\n        .vjs-load-progress {\r\n            background: rgba(255, 255, 255, 1 - $overlay-opacity);\r\n        }\r\n        \r\n        .vjs-mouse-display {\r\n            z-index: 10;\r\n            width: 1px;\r\n            background: rgb(0, 0, 0);\r\n            display: none;\r\n        }\r\n        \r\n        .vjs-play-progress {\r\n            @extend .vb-icon; \r\n            \r\n            background: #fff;\r\n            \r\n            &:after {\r\n                @extend .vb-hover-animated;\r\n                \r\n                content: $font-Videobox-circle;\r\n                position: absolute;\r\n                right: 0;\r\n                margin: -0.125*$base-font-size;\r\n                opacity: 0;\r\n                font-size: 0.25*$base-font-size;\r\n                top: 0.125*$base-font-size;\r\n                cursor: pointer;\r\n            }\r\n        }\r\n    }\r\n    \r\n    &:hover,\r\n    &:focus {\r\n        \r\n        .vjs-mouse-display {\r\n            display: block;\r\n        }\r\n        \r\n        .vjs-play-progress:after {\r\n            opacity: 1;\r\n            font-size: $base-font-size;\r\n            margin: -$base-font-size/2;\r\n        }\r\n    }\r\n}",".vjs-fullscreen-control {\r\n    @extend .vb-icon; \r\n    @extend .vb-hover-animated;\r\n    \r\n    @include flex(0 0 2*$base-font-size);\r\n    \r\n    &:hover {\r\n        color: $primary-light;\r\n    }\r\n    \r\n    &:before {\r\n        content: $font-Videobox-fullscreen-enter;\r\n    }\r\n    \r\n}\r\n\r\n.vjs-fullscreen .vjs-fullscreen-control {\r\n    \r\n    &:before {\r\n        content: $font-Videobox-fullscreen-exit;\r\n    }\r\n}"],"mappings":"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","names":[],"sourceRoot":"/source/"}